# R file 
# run.01.filter_events_dPSI_padjfiler

R.Version()
rm(list=ls())

# din     ="/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230824054737_Zhen.Gao_GM_noSMN1/DNANenxs_Master/" 
# out_dir = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230824054737_Zhen.Gao_GM_noSMN1/DSG_Result/From_DNANenxs_Master/"
din     ="/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230823221304_Zhen.Gao_ShSy5Y_GRCh38/DNANenxs_Master/"
out_dir = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230823221304_Zhen.Gao_ShSy5Y_GRCh38/DSG_Result/From_DNANenxs_Master/"
dir.create(out_dir, recursive = T)               #dir.create(din, recursive = T)
setwd(din )

pformat="/edgehpc/dept/compbio/users/dhuh/software/R/R_modified/pformat_whitebG.r" # 
jet=colorRampPalette(c("blue","green","yellow","orange","darkred"))                # 

######################
master_files = list.files( path = din , pattern = "_master_table.csv$", recursive = T) 
master_files                                                                    

master_files_names = basename(master_files)
master_files_short_names = gsub( "_master_table.csv" ,  "" , master_files_names)

thr_dPSI=0.1;                                                                      #thr_EdPSI=thr_dPSI;
thr_dPSI_ar  = c(0.1);  #thr_dPSI_ar  = c(0.1,0.2,0.3,0.4); 
thr_EdPSI_ar = thr_dPSI_ar;
thr_padj     = 0.05; 
thr_PdPSI    = 0.9
thr_M        = 50 #100 #50


# [19] "dPSI_GM_BIO_2197306_10x_vs_GM_BIO_1949634_10x"
# [20] "dPSI_GM_BIO_2197306_10x_vs_GM_DMSO"           
# [21] "dPSI_GM_BIO_2197306_3x_vs_GM_DMSO"       
# [-----] "dPSI_GM_BIO_2197306_3x_vs_GM_BIO_1949634_3x" #========================= This one was not downloaded for known reason re-download 

for(i in 1:length(master_files)){          
  
  #fin = dir(paste0(din,coi),pattern="master_table.csv")
  
  tbtemp = read.csv(paste0(din,"/",master_files[i]),stringsAsFactors=F)      #tbtemp = read.csv(paste0(din,"/","GM_BIO_2197306_3x_vs_GM_BIO_1949634_3x_master_table.csv"),stringsAsFactors=F)
  
  colnames(tbtemp)
  dim(tbtemp)
  
  for(thr_dPSI in thr_dPSI_ar){
    thr_EdPSI = thr_dPSI
    
    rn_rm_lc = which( tbtemp$FDR          < thr_padj  & abs(tbtemp$dPSI) > thr_dPSI  ) # rn that passed filter, rmats and leafcutter
    rn_mj    = which( tbtemp$Cutoff_dPSI >= thr_EdPSI &    tbtemp$PdPSI  > thr_PdPSI ) # rn that passed filter, majiq
    rn_t     = c( rn_rm_lc, rn_mj )
    
    tbtemp_t = tbtemp[rn_t,] # filtered table
    tbtemp_t = tbtemp_t[ !(tbtemp_t$Algorithm=="rmats" & as.numeric(tbtemp_t$M) < thr_M), ]    # remove thr_M
    
    # formatting: comma to semi-colon #
    tbtemp_t$Event_info=gsub(",",";",tbtemp_t$Event_info)
    
     ## save filtered table ##
    fout = paste0(out_dir, "filteredevents_",master_files_short_names[i],"_dPSI",thr_dPSI,"_padj",thr_padj,"_M",thr_M,"_EdPSI",thr_EdPSI,"_PdPSI",thr_PdPSI,".csv")
    write.csv(tbtemp_t, file=fout, quote=F, row.names=F)
  }
}

# run.02.DSG_counts_minmaxtable_plot14-2023-08-22-UpSetR1.R
#setwd("/camhpc/ngs/projects/TST12086/dnanexus/20230305034844_Zhen.Gao/code_downstream/")
R.Version()
rm(list = ls())
#install.packages("ggVennDiagram") # 15min
library("ggVennDiagram")
library(ggplot2)
require("UpSetR") # movies <- read.csv(system.file("extdata", "movies.csv", package = "UpSetR"), header = T, sep = ";")

# din     ="/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230824054737_Zhen.Gao_GM_noSMN1/DSG_Result/From_DNANenxs_Master/" 
# out_dir = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230824054737_Zhen.Gao_GM_noSMN1/DSG_Result/From_DNANenxs_Master_analysis.02.splicing_offtargets/"

din     = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230823221304_Zhen.Gao_ShSy5Y_GRCh38/DSG_Result/From_DNANenxs_Master/"
out_dir = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230823221304_Zhen.Gao_ShSy5Y_GRCh38/DSG_Result/From_DNANenxs_Master_analysis.02.splicing_offtargets/"
dir.create(out_dir, recursive = T)
setwd(out_dir)

pformat = "/edgehpc/dept/compbio/users/dhuh/software/R/R_modified/pformat_whitebG.r"
jet     = colorRampPalette(c("blue","green","yellow","orange","darkred")) # make gradient of colors #brightjet = colorRampPalette(c("#007FFF", "cyan","#7FFF7F", "yellow", "#FF7F00","#FF3535")) # make gradient of colors

######################
rotate_x <- function(data, column_to_plot, labels_vec, rot_angle) {
  par(mar = c(15,15,1,1))
  plt <- barplot(data[[column_to_plot]], col='steelblue', xaxt="n", ylab = "num.DSG",)
  text(plt, par("usr")[3], labels = labels_vec, srt = rot_angle, adj = c(1.1,1.1), xpd = TRUE, cex=1) 
}
######################
minpdj_maxdPSI = function(tbtemp, colnn){
  
  ## input : BSSI formatted splice master table, optionally pre-filtered.
  ## output : for each genesymbol, write  minpadj and dPSI for                   == ==  >>  rMATS                 (I)
  ## output : for each genesymbol, write  minpadj and dPSI for                   == ==  >>  Leafcutter           (II)
  ## output : for each genesymbol, write maxPdPSI and dPSI for                   == ==  >>  majiq               (III)
  
  gn = unique(tbtemp$geneSymbol)
  
  if( sum(gn  == ".") > 0 ){ gn = gn[ !(gn  == ".") ] }  # remove un-annotated genes
  
  minmaxcum = as.data.frame( matrix(0, nrow = length(gn) , ncol = 3 ) )
  colnames(minmaxcum) = colnn 
  minmaxcum$genesymbol = gn
  
  for(i in 1:length(gn)){
    #i
    gntemp = gn[i]
    
    tbtemp2 = tbtemp[ which(tbtemp$geneSymbol ==  gntemp) , ]
    
    if(nrow(tbtemp2) ==  1){          # only one row of goi, no "min" needed
      
      dPSItemp = tbtemp2$dPSI
      if(tbtemp2$Algorithm ==  "majiq"){
        padj_PdPSI = tbtemp2$PdPSI    # for majiq, keep PdPSI.
      }else{
        padj_PdPSI = tbtemp2$FDR      # for rmats and leafcutter keep padj
      }
      
    }else{                            # if there are more than two rows of goi (gene of interest) , find either "min" padj or max PdPSI 
      
      rn_minpadj = which( tbtemp2$FDR == min( tbtemp2$FDR, na.rm = T) ) 
      tbtemp3 = tbtemp2[ rn_minpadj, ]
      
      if(nrow(tbtemp3) ==  0){        # if there's no min, it's all majiq, with multiple lines
        rn_maxpdpsi = which(tbtemp2$PdPSI  == max(tbtemp2$PdPSI, na.rm = T)  ) # ..get the max(PdPSI)
        tbtemp3 = tbtemp2[rn_maxpdpsi,]
        
        if(nrow(tbtemp3) ==  1){       # if there's only one max PdPSI
          dPSItemp = tbtemp3$dPSI
          padj_PdPSI = tbtemp3$PdPSI
        }else{                         #if there's more than on max dPSI
          dPSItemp = max(tbtemp3$dPSI) # pick the max(dPSI)
          padj_PdPSI = tbtemp3$PdPSI[1]
        }
        
      }else if(nrow(tbtemp3) ==  1){  # if there's only one min (either rmats or leafcutter, no majiq)
        dPSItemp   = tbtemp3$dPSI
        padj_PdPSI = tbtemp3$FDR
      }else{                          # more than 1 min, pick max(dPSI). both are either rmats or leafcutter. 
        dPSItemp = max(tbtemp3$dPSI)
        padj_PdPSI = tbtemp3$FDR[1]
      }
    }
    minmaxcum[i, 2] = padj_PdPSI
    minmaxcum[i, 3] = dPSItemp
    
  }
  
  return(minmaxcum)
}


coi_ar = dir(din, pattern = "dPSI0.1")    # all compounds, dPSI>0.1 #coi_ar = dir(din)

thr_dPSI_rm = 0.3; 
thr_dPSI_lc = 0.25; 
thr_dPSI_mj = 0.3;

param = paste0("dPSIrm",thr_dPSI_rm,"_dPSIlc",thr_dPSI_lc,"_padj0.05_EdPSI",thr_dPSI_mj,"_PdPSI0.9_M50") # for fout

### minpadj per gene ####################
minmaxall = c()

for(i in 1:length(coi_ar)){
  #  i = 1
  coi = coi_ar[i] # compound of interest
  fin = dir(din,pattern = coi)
  tbtemp = read.table(paste0(din,fin) ,stringsAsFactors = F,sep = ",",header = 1)
  head(tbtemp)
  dim(tbtemp)
  
  ## apply thresholding per algorithm ##
  rm_t = tbtemp[ which( tbtemp$Algorithm ==  "rmats"      & abs(tbtemp$dPSI)       >=  thr_dPSI_rm) , ]
  lc_t = tbtemp[ which( tbtemp$Algorithm ==  "leafcutter" & abs(tbtemp$dPSI)       >=  thr_dPSI_lc) , ]
  mj_t = tbtemp[ which( tbtemp$Algorithm ==  "majiq"      &     tbtemp$Cutoff_dPSI >=  thr_dPSI_mj) , ]
  
  head(rm_t)
  head(lc_t)
  head(mj_t)
  
  tbtemp_t = rbind(rm_t, lc_t, mj_t)
  tbtemp_t = tbtemp_t[!(tbtemp_t$geneSymbol ==  ".") ,] #clean up some names
  head(tbtemp_t)
   dim(tbtemp_t)
   ## 
  # goi = "ATG16L1"; tbtemp_t[which(tbtemp_t$geneSymbol ==  goi) ,]
  
  ## extract min-pval-max-dPSI ##
  minmaxtemp = minpdj_maxdPSI( tbtemp_t, colnn = c("genesymbol",paste0("minpadj_maxPdPSI_",coi) , paste0("dPSI_",coi) ) )  ##  == == == == == == == == == == == == == == == == == == Call the function
  ## minpdj_maxdPSI = function(tbtemp, colnn) # ZG
  #minmaxtemp = minpdj_maxdPSI( tbtemp = tbtemp, colnn = c( "genesymbol" , paste0("minpadj_maxPdPSI_", coi) , paste0("dPSI_", coi) ) ) ##  == == == == == == == == == == == == == == == == == == Call the function
  #head(minmaxtemp)
  
  ## optional: clean up colnames ##
  colnames(minmaxtemp) = gsub("filteredevents_","", sapply( strsplit( colnames(minmaxtemp) , paste0("_dPSI") ) , "[[", 1) ) #   gsub("filteredevents_TST11742_","", sapply( strsplit( colnames(minmaxtemp) , paste0("_dPSI") ) , "[[", 1) )
  
  ## merge ##
  if(i ==  1){ minmaxall = minmaxtemp
  } else{  minmaxall = merge(minmaxall, minmaxtemp, by.x = "genesymbol", by.y = "genesymbol" , all = T) }
}

#minmaxall_back  =  minmaxall minmaxall = minmaxall_back  #=  minmaxall 
head(minmaxall) 
 dim(minmaxall) #[2] 162  60 GM cells [1] 249   84 GM cells 

colnames(minmaxall) = gsub("minpadj_maxPdPSI_","Padj_maxP_", colnames(minmaxall)) # colnames(minmaxall) = gsub("filteredevents_","", colnames(minmaxall)) #              gsub("filteredevents_TST11955_","", colnames(minmaxall))
#colnames(minmaxall) = gsub("WT100","WT_100", colnames(minmaxall)) 
#colnames(minmaxall) = gsub("WT500","WT_500", colnames(minmaxall)) 

minmaxall_raw = minmaxall
rownames(minmaxall) = make.names(minmaxall$genesymbol , unique = T)            # should take care     
minmaxall$genesymbol = NULL 

colnames(minmaxall) 
row.names(minmaxall) 
minmaxall[1:10, 1:10] 
minmaxall_raw[1:10, 1:10] 

#minmaxall = minmaxall[,order(colnames(minmaxall))]
getwd()

fout = paste0("summarytable_minpadj_maxPdPSI_dPSI_",param,".csv")
write.csv(minmaxall_raw,file = fout,quote = F, row.names = F)

fout = paste0("summarytable_with_gene",param,".csv")
write.csv(minmaxall,file = fout,quote = F, row.names = T)


########################################### 08-01-2023
dim(minmaxall)
minmaxall[1:10, 1:10]

any(row.names(minmaxall) %in% "NA")
any(row.names(minmaxall) %in% "NA.")
any(row.names(minmaxall) %in% "NA..")
minmaxall = minmaxall[ !(row.names(minmaxall) %in% c("NA", "NA.", "NA..")), ]

for(i in 1:ncol(minmaxall) ){
  my_vec = minmaxall[, i]
  print(i)
  print(any( is.infinite(my_vec)) )  #   any( is.infinite(my_vec))          68
}

dim(minmaxall) #  249 82 GM cells
head(minmaxall) # 1672 82
########################################### 08-01-2023


minmaxall_dPSI  = minmaxall[, grep( "genesymbol|^dPSI", colnames(minmaxall) ) ] #drop padj, only keep dPSI, eq. delete 50% columns. <<============ colnames(minmaxall) = gsub("minpadj_maxPdPSI_","Padj_mP_", colnames(minmaxall) )  #####

head(minmaxall_dPSI )
minmaxall_dPSI[1:5, 1:5]

 dim(minmaxall_dPSI )
colnames(minmaxall_dPSI ) ###############=====================<<<<<<<<<<<<<<< 07-16-2022

dPSI_bi = minmaxall_dPSI2 = minmaxall_dPSI 

row.names(dPSI_bi ) # row.names(dPSI_bi ) =  make.names(dPSI_bi$genesymbol, unique=TRUE) # dPSI_bi $genesymbol = NULL

dPSI_bi[ is.na(dPSI_bi)       ] = 0
dPSI_bi[   abs(dPSI_bi) >0    ] = 1
dPSI_bi

colnames(dPSI_bi) 
colnames(dPSI_bi) = gsub("dPSI_" , "", colnames(dPSI_bi) ) # colnames(dPSI_bi) = gsub("dPSI_","", gsub("_max.abs.dPSI..","",colnames(dPSI_bi)))

head(dPSI_bi)
 dim(dPSI_bi)

fout = paste0("binary_",param,".csv")
write.csv(dPSI_bi,file = fout,quote = F)


##############################
#####  plots : separate file as well #################
##############################

## total number of DSG ###
y = colSums(dPSI_bi)

fout = paste0("binary_numDSG_",param,".png")
png(fout,height = 800, width = length(y)*50) #png(fout,height = 500, width = length(y)*50)
source(pformat)
par(mar = c(30,10,1,1)) # par(mar = c(20,10,1,1))
barplot(y,border = NA,ylim = c(0,max(y)*1.2) ,ylab = "num.DSG",names.arg = names(y) ,las = 2,cex.axis = 1.5, cex.names = 1.5  ) # barplot(y,border = NA,ylim = c(0,max(y)*1.2) ,ylab = "num.DSG",names.arg = names(y) ,las = 2,cex.axis = 1.5, cex.names = 1.5  )
dev.off()

fout = paste0("UpSet_0_top_5", ".png")
png(fout,height = 1000, width = length(y)*50) #png(fout,height = 500, width = length(y)*50)
upset(dPSI_bi ,  mainbar.y.label = "Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))    # https://cran.r-project.org/web/packages/UpSetR/vignettes/basic.usage.html
dev.off()

###############################################################################################################
# Exp                Control
####################################
minmaxall_dPSI[1:5, 1:5] 
dPSI_bi[1:5, 1:5]

########### ==== &&&& ( 1 ) &&&& ==== #############
# DMSO_CHX --vs-- DMSO_EtOH
###################################################
# DMSO_CHX          DMSO_EtOH                                                 # [13] "DMSO_CHX_vs_DMSO_EtOH" 
####==========================================####
####==========================================####


########### ==== &&&& ( 2 ) &&&& ==== ############
# WT_EtOH (WT_100 and WT_500) --vs-- DMSO_EtOH
###################################################
# U1_WT_100_EtOH    DMSO_EtOH                                                 # [31] U1_WT_100_EtOH_vs_DMSO_EtOH                   
# U1_WT_500_EtOH    DMSO_EtOH                                                 # [39] U1_WT_500_CHX_vs_DMSO_EtOH   
####==========================================####
head(dPSI_bi)
colnames(dPSI_bi)
dPSI_bi_working  =dPSI_bi[ , c("U1_WT_100_EtOH_vs_DMSO_EtOH", "U1_WT_500_EtOH_vs_DMSO_EtOH"),  drop = F]  #U1_WT_EtOH_vs_DMSO_EtOH_dPSI
dPSI_bi_working = dPSI_bi_working[!(rowSums(dPSI_bi_working) == 0), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na
dPSI_bi_working

fout = paste0("UpSet_2", ".png")
png(fout, height = 1000, width = 680+ncol(dPSI_bi_working)*50)            #png(fout,height = 500, width = length(y)*50)
upset(dPSI_bi_working ,  mainbar.y.label = "Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))    # https://cran.r-project.org/web/packages/UpSetR/vignettes/basic.usage.html
dev.off()

####==========================================####


########### ==== &&&& ( 3 ) &&&& ==== #############
# WT_CHX (WT_100 and WT_500) --vs-- DMSO_CHX
###################################################
U1_WT_100_CHX     DMSO_CHX                                                  # [32] "U1_WT_100_CHX_vs_U1_WT_100_EtOH"             
U1_WT_500_CHX     DMSO_CHX                                                  # [38] "U1_WT_500_CHX_vs_DMSO_CHX"   
####==========================================####

head(dPSI_bi)
colnames(dPSI_bi)
dPSI_bi_working  =dPSI_bi[ , c("U1_WT_100_CHX_vs_DMSO_CHX", "U1_WT_500_CHX_vs_DMSO_CHX"),  drop = F]  
dPSI_bi_working = dPSI_bi_working[!(rowSums(dPSI_bi_working) == 0), ]
dPSI_bi_working

fout = paste0("UpSet_3", ".png")
png(fout, height = 1000, width = 680+ncol(dPSI_bi_working)*50) 
upset(dPSI_bi_working ,  mainbar.y.label = "Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))    
dev.off()

####==========================================####


########### ==== &&&& ( 4 ) &&&& ==== #############
#  mut1_100 
###################################################
U1_mut1_100_EtOH  DMSO_EtOH		U1_WT_100_EtOH     DMSO_EtOH
U1_mut1_100_CHX   DMSO_CHX		U1_WT_100_EtOH     DMSO_EtOH
U1_mut1_100_CHX   DMSO_CHX		U1_mut1_100_EtOH   DMSO_EtOH	
U1_mut1_100_CHX   DMSO_CHX		U1_WT_100_CHX      DMSO_CHX
####==========================================####
head(dPSI_bi)
colnames(dPSI_bi)
dPSI_bi_working  =dPSI_bi[ , c(  "U1_mut1_100_EtOH_vs_DMSO_EtOH" ,   "U1_mut1_100_CHX_vs_DMSO_CHX"      , "U1_WT_100_EtOH_vs_DMSO_EtOH",      "U1_WT_100_CHX_vs_DMSO_CHX"    ),  drop = F]  
dPSI_bi_working = dPSI_bi_working[!(rowSums(dPSI_bi_working) == 0), ] #
dPSI_bi_working

fout = paste0("UpSet_4", ".png")
png(fout, height = 1000, width = 680+ncol(dPSI_bi_working)*50) 
upset(dPSI_bi_working ,  mainbar.y.label = "Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))   
dev.off()

####==========================================####



########### ==== &&&& ( 5 ) &&&& ==== #############
#  mut1_500 
###################################################
U1_mut1_500_EtOH  DMSO_EtOH		U1_WT_500_EtOH     DMSO_EtOH
U1_mut1_500_CHX   DMSO_CHX		U1_WT_500_EtOH     DMSO_EtOH
U1_mut1_500_CHX   DMSO_CHX		U1_mut1_500_EtOH   DMSO_EtOH	
U1_mut1_500_CHX   DMSO_CHX		U1_WT_500_CHX      DMSO_CHX
####==========================================####
head(dPSI_bi)
colnames(dPSI_bi)
dPSI_bi_working  =dPSI_bi[ , c(  "U1_mut1_500_EtOH_vs_DMSO_EtOH" ,   "U1_mut1_500_CHX_vs_DMSO_CHX"      , "U1_WT_500_EtOH_vs_DMSO_EtOH",      "U1_WT_500_CHX_vs_DMSO_CHX"    ),  drop = F]  
dPSI_bi_working = dPSI_bi_working[!(rowSums(dPSI_bi_working) == 0), ] #
dPSI_bi_working

fout = paste0("UpSet_5", ".png")
png(fout, height = 1000, width = 680+ncol(dPSI_bi_working)*50) 
upset(dPSI_bi_working ,  mainbar.y.label = "Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))   
dev.off()

####==========================================####


########### ==== &&&& ( 6 ) &&&& ==== #############
#  mut2_100 
###################################################
U1_mut2_100_EtOH  DMSO_EtOH		U1_WT_100_EtOH     DMSO_EtOH
U1_mut2_100_CHX   DMSO_CHX		U1_WT_100_EtOH     DMSO_EtOH
U1_mut2_100_CHX   DMSO_CHX		U1_mut2_100_EtOH   DMSO_EtOH	
U1_mut2_100_CHX   DMSO_CHX		U1_WT_100_CHX      DMSO_CHX
####==========================================####
head(dPSI_bi)
colnames(dPSI_bi)
dPSI_bi_working  =dPSI_bi[ , c(  "U1_mut2_100_EtOH_vs_DMSO_EtOH" ,   "U1_mut2_100_CHX_vs_DMSO_CHX"      , "U1_WT_100_EtOH_vs_DMSO_EtOH",      "U1_WT_100_CHX_vs_DMSO_CHX"    ),  drop = F]  
dPSI_bi_working = dPSI_bi_working[!(rowSums(dPSI_bi_working) == 0), ] #
dPSI_bi_working

fout = paste0("UpSet_6", ".png")
png(fout, height = 1000, width = 680+ncol(dPSI_bi_working)*50) 
upset(dPSI_bi_working ,  mainbar.y.label = "Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))   
dev.off()

########### ==== &&&& ( 7 ) &&&& ==== #############
#  mut2_500 
###################################################
U1_mut2_500_EtOH  DMSO_EtOH		U1_WT_500_EtOH     DMSO_EtOH
U1_mut2_500_CHX   DMSO_CHX		U1_WT_500_EtOH     DMSO_EtOH
U1_mut2_500_CHX   DMSO_CHX		U1_mut2_500_EtOH   DMSO_EtOH	
U1_mut2_500_CHX   DMSO_CHX		U1_WT_500_CHX      DMSO_CHX

####==========================================####
head(dPSI_bi)
colnames(dPSI_bi)
dPSI_bi_working  =dPSI_bi[ , c(  "U1_mut2_500_EtOH_vs_DMSO_EtOH" ,   "U1_mut2_500_CHX_vs_DMSO_CHX"      , "U1_WT_500_EtOH_vs_DMSO_EtOH",      "U1_WT_500_CHX_vs_DMSO_CHX"    ),  drop = F]  
dPSI_bi_working = dPSI_bi_working[!(rowSums(dPSI_bi_working) == 0), ] #
dPSI_bi_working

fout = paste0("UpSet_7", ".png")
png(fout, height = 1000, width = 680+ncol(dPSI_bi_working)*50) 
upset(dPSI_bi_working ,  mainbar.y.label = "Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))   
dev.off()
####==========================================####

########### ==== &&&& ( 8 ) &&&& ==== #############
#SM1-3_EtOH --vs-- WT_EtOH (WT_100 and WT_500) 
###################################################
BIO2195127_EtOH   DMSO_EtOH		U1_WT_100_EtOH     DMSO_EtOH
BIO2197294_EtOH   DMSO_EtOH		U1_WT_100_EtOH     DMSO_EtOH
Branaplam_EtOH    DMSO_EtOH		U1_WT_100_EtOH     DMSO_EtOH

BIO2195127_EtOH   DMSO_EtOH		U1_WT_500_EtOH     DMSO_EtOH
BIO2197294_EtOH   DMSO_EtOH		U1_WT_500_EtOH     DMSO_EtOH
Branaplam_EtOH    DMSO_EtOH		U1_WT_500_EtOH     DMSO_EtOH

####==========================================####
head(dPSI_bi)
colnames(dPSI_bi)
dPSI_bi_working  =dPSI_bi[ , c(  "BIO2195127_EtOH_vs_DMSO_EtOH", "BIO2197294_EtOH_vs_DMSO_EtOH"  , "Branaplam_EtOH_vs_DMSO_EtOH"      , "U1_WT_100_EtOH_vs_DMSO_EtOH",  "U1_WT_500_EtOH_vs_DMSO_EtOH"   ),  drop = F]  
dPSI_bi_working = dPSI_bi_working[!(rowSums(dPSI_bi_working) == 0), ] #
head(dPSI_bi_working)

fout = paste0("UpSet_8", ".png")
png(fout, height = 1000, width = 680+ncol(dPSI_bi_working)*50) 
upset(dPSI_bi_working ,  mainbar.y.label = "Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))   
dev.off()

########### ==== &&&& ( 9 ) &&&& ==== #############
#SM1-3_CHX --vs-- WT_CHX (WT_100 and WT_500) 
###################################################
BIO2195127_CHX    DMSO_CHX		U1_WT_100_CHX      DMSO_CHX
BIO2197294_CHX    DMSO_CHX		U1_WT_100_CHX      DMSO_CHX
Branaplam_CHX     DMSO_CHX		U1_WT_100_CHX      DMSO_CHX

BIO2195127_CHX    DMSO_CHX		U1_WT_500_CHX      DMSO_CHX
BIO2197294_CHX    DMSO_CHX		U1_WT_500_CHX      DMSO_CHX
Branaplam_CHX     DMSO_CHX		U1_WT_500_CHX      DMSO_CHX

####==========================================####
head(dPSI_bi)
colnames(dPSI_bi)
dPSI_bi_working  =dPSI_bi[ , c(  "BIO2195127_CHX_vs_DMSO_CHX", "BIO2197294_CHX_vs_DMSO_CHX"  , "Branaplam_CHX_vs_DMSO_CHX"      , "U1_WT_100_CHX_vs_DMSO_CHX",  "U1_WT_500_CHX_vs_DMSO_CHX"   ),  drop = F]  
dPSI_bi_working = dPSI_bi_working[!(rowSums(dPSI_bi_working) == 0), ] #
head(dPSI_bi_working)

fout = paste0("UpSet_9", ".png")
png(fout, height = 1000, width = 680+ncol(dPSI_bi_working)*50) 
upset(dPSI_bi_working ,  mainbar.y.label = "Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))   
dev.off()




########### ==== &&&& ( 10 ) &&&& ==== ############
#SM1-3_CHX --vs-- mut1_EtOH (mut1_100 and mut1_500) 
###################################################
BIO2195127_EtOH   DMSO_EtOH		U1_mut1_100_EtOH   DMSO_EtOH
BIO2197294_EtOH   DMSO_EtOH		U1_mut1_100_EtOH   DMSO_EtOH
Branaplam_EtOH    DMSO_EtOH		U1_mut1_100_EtOH   DMSO_EtOH

BIO2195127_EtOH   DMSO_EtOH		U1_mut1_500_EtOH   DMSO_EtOH
BIO2197294_EtOH   DMSO_EtOH		U1_mut1_500_EtOH   DMSO_EtOH
Branaplam_EtOH    DMSO_EtOH		U1_mut1_500_EtOH   DMSO_EtOH
####==========================================####
head(dPSI_bi)
colnames(dPSI_bi)
dPSI_bi_working  =dPSI_bi[ , c(  "BIO2195127_EtOH_vs_DMSO_EtOH", "BIO2197294_EtOH_vs_DMSO_EtOH"  , "Branaplam_EtOH_vs_DMSO_EtOH"      , "U1_mut1_100_EtOH_vs_DMSO_EtOH" ,   "U1_mut1_500_EtOH_vs_DMSO_EtOH"     ),  drop = F]  
dPSI_bi_working = dPSI_bi_working[!(rowSums(dPSI_bi_working) == 0), ] #
head(dPSI_bi_working)

fout = paste0("UpSet_10", ".png")
png(fout, height = 1000, width = 680+ncol(dPSI_bi_working)*50) 
upset(dPSI_bi_working ,  mainbar.y.label = "Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))   
dev.off()



########### ==== &&&& ( 11 ) &&&& ==== #############
#SM1-3_EtOH --vs-- mut1_CHX (mut1_100 and mut1_500) 
####################################################
BIO2195127_CHX    DMSO_CHX		U1_mut1_100_CHX      DMSO_CHX
BIO2197294_CHX    DMSO_CHX		U1_mut1_100_CHX      DMSO_CHX
Branaplam_CHX     DMSO_CHX		U1_mut1_100_CHX      DMSO_CHX

BIO2195127_CHX    DMSO_CHX		U1_mut1_500_CHX      DMSO_CHX
BIO2197294_CHX    DMSO_CHX		U1_mut1_500_CHX      DMSO_CHX
Branaplam_CHX     DMSO_CHX		U1_mut1_500_CHX      DMSO_CHX

####==========================================####
head(dPSI_bi)
colnames(dPSI_bi)
dPSI_bi_working  =dPSI_bi[ , c(  "BIO2195127_CHX_vs_DMSO_CHX", "BIO2197294_CHX_vs_DMSO_CHX"  , "Branaplam_CHX_vs_DMSO_CHX"      , "U1_mut1_100_CHX_vs_DMSO_CHX" ,   "U1_mut1_500_CHX_vs_DMSO_CHX"     ),  drop = F]  
dPSI_bi_working = dPSI_bi_working[!(rowSums(dPSI_bi_working) == 0), ] #
head(dPSI_bi_working)

fout = paste0("UpSet_11", ".png")
png(fout, height = 1000, width = 680+ncol(dPSI_bi_working)*50) 
upset(dPSI_bi_working ,  mainbar.y.label = "Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))   
dev.off()



########### ==== &&&& ( 12 ) &&&& ==== #############
# SM1-2_with_WT
####################################################
U1_WT_500_Branaplam   DMSO_EtOH
U1_WT_500_BIO2197294  DMSO_EtOH 

U1_WT_500_Branaplam   U1_WT_500_EtOH
U1_WT_500_BIO2197294  U1_WT_500_EtOH 

U1_WT_500_Branaplam   DMSO_EtOH     U1_WT_500_EtOH    DMSO_EtOH
U1_WT_500_BIO2197294  DMSO_EtOH     U1_WT_500_EtOH    DMSO_EtOH

####==========================================####
head(dPSI_bi)
colnames(dPSI_bi)
dPSI_bi_working  =dPSI_bi[ , c( "U1_WT_500_Branaplam_vs_DMSO_EtOH"  ,  "U1_WT_500_Branaplam_vs_U1_WT_500_EtOH" , "U1_WT_500_BIO2197294_vs_DMSO_EtOH"  , "U1_WT_500_BIO2197294_vs_U1_WT_500_EtOH",  "U1_WT_500_EtOH_vs_DMSO_EtOH"   ),  drop = F]  
dPSI_bi_working = dPSI_bi_working[!(rowSums(dPSI_bi_working) == 0), ] #
head(dPSI_bi_working)

fout = paste0("UpSet_12", ".png")
png(fout, height = 1000, width = 680+ncol(dPSI_bi_working)*50) 
upset(dPSI_bi_working ,  mainbar.y.label = "Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))   
dev.off()


########### ==== &&&& ( 13 ) &&&& ==== ############
#SM1-3_EtOH --vs-- mut2_EtOH (mut2_100 and mut2_500) 
###################################################
BIO2195127_EtOH   DMSO_EtOH		U1_mut2_100_EtOH   DMSO_EtOH        # (13.1) SM1 vs mut2 in EtOH (mut2-100)
BIO2197294_EtOH   DMSO_EtOH		U1_mut2_100_EtOH   DMSO_EtOH        # (13.2) SM2 vs mut2 in EtOH
Branaplam_EtOH    DMSO_EtOH		U1_mut2_100_EtOH   DMSO_EtOH        # (13.3) SM3 vs mut2 in EtOH

BIO2195127_EtOH   DMSO_EtOH		U1_mut2_500_EtOH   DMSO_EtOH
BIO2197294_EtOH   DMSO_EtOH		U1_mut2_500_EtOH   DMSO_EtOH
Branaplam_EtOH    DMSO_EtOH		U1_mut2_500_EtOH   DMSO_EtOH

####==========================================####
head(dPSI_bi)
colnames(dPSI_bi)
dPSI_bi_working  =dPSI_bi[ , c(  "BIO2195127_EtOH_vs_DMSO_EtOH", "BIO2197294_EtOH_vs_DMSO_EtOH"  , "Branaplam_EtOH_vs_DMSO_EtOH"      , "U1_mut2_100_EtOH_vs_DMSO_EtOH" ,   "U1_mut2_500_EtOH_vs_DMSO_EtOH"     ),  drop = F]  
dPSI_bi_working = dPSI_bi_working[!(rowSums(dPSI_bi_working) == 0), ] #
head(dPSI_bi_working)

fout = paste0("UpSet_13", ".png")
png(fout, height = 1000, width = 680+ncol(dPSI_bi_working)*50) 
upset(dPSI_bi_working ,  mainbar.y.label = "Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))   
dev.off()


########### ==== &&&& ( 14 ) &&&& ==== #############
#SM1-3_CHX --vs-- mut2_CHX (mut2_100 and mut2_500) 
####################################################
BIO2195127_CHX    DMSO_CHX		U1_mut2_100_CHX      DMSO_CHX      # (14.1) SM1 vs mut2 in CHX (mut2-100)
BIO2197294_CHX    DMSO_CHX		U1_mut2_100_CHX      DMSO_CHX      # (14.2) SM2 vs mut2 in CHX
Branaplam_CHX     DMSO_CHX		U1_mut2_100_CHX      DMSO_CHX      # (14.3) SM3 vs mut2 in CHX

BIO2195127_CHX    DMSO_CHX		U1_mut2_500_CHX      DMSO_CHX
BIO2197294_CHX    DMSO_CHX		U1_mut2_500_CHX      DMSO_CHX
Branaplam_CHX     DMSO_CHX		U1_mut2_500_CHX      DMSO_CHX

####==========================================####
head(dPSI_bi)
colnames(dPSI_bi)
dPSI_bi_working  =dPSI_bi[ , c(  "BIO2195127_CHX_vs_DMSO_CHX", "BIO2197294_CHX_vs_DMSO_CHX"  , "Branaplam_CHX_vs_DMSO_CHX"      , "U1_mut2_100_CHX_vs_DMSO_CHX" ,   "U1_mut2_500_CHX_vs_DMSO_CHX"     ),  drop = F]  
dPSI_bi_working = dPSI_bi_working[!(rowSums(dPSI_bi_working) == 0), ] #
head(dPSI_bi_working)

fout = paste0("UpSet_14", ".png")
png(fout, height = 1000, width = 680+ncol(dPSI_bi_working)*50) 
upset(dPSI_bi_working ,  mainbar.y.label = "Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))   
dev.off()

########### ==== &&&& ( 15 ) &&&& ==== #############
# All combinations comparing CHX to EtOH
####################################################    ## ============================= (0) 
DMSO_CHX                 DMSO_EtOH



U1_WT_100_CHX            U1_WT_100_EtOH
U1_WT_500_CHX            U1_WT_500_EtOH
U1_mut1_100_CHX          U1_mut1_100_EtOH 
U1_mut1_500_CHX          U1_mut1_500_EtOH
U1_mut2_100_CHX          U1_mut2_100_EtOH
U1_mut2_500_CHX          U1_mut2_500_EtOH
BIO2195127_CHX           BIO2195127_EtOH
BIO2197294_CHX           BIO2197294_EtOH
Branaplam_CHX            Branaplam_EtOH

#U1_WT_100_EtOH
####################################################  
minmaxall_dPSI[1:5, 1:5]
colnames(minmaxall_dPSI)
####################################################  
##====== &**** 15.0 ****& ======####
# DMSO_CHX_vs_DMSO_EtOH_dPSI  = minmaxall_dPSI[ which(! is.na(minmaxall_dPSI$dPSI_DMSO_CHX_vs_DMSO_EtOH )), "dPSI_DMSO_CHX_vs_DMSO_EtOH", drop = F] 
# DMSO_CHX_vs_DMSO_EtOH_genes = row.names(dPSI_bi[which(dPSI_bi$DMSO_CHX_vs_DMSO_EtOH  == 1), "DMSO_CHX_vs_DMSO_EtOH", drop = F] )
# length(DMSO_CHX_vs_DMSO_EtOH_genes)                                        # ==========> 487
# fout = paste0("DMSO_CHX_vs_DMSO_EtOH_dPSI.csv")
# write.csv(DMSO_CHX_vs_DMSO_EtOH_dPSI,file = fout,quote = F, row.names = T)

##====== &**** 15.1 ****& ======####
U1_WT_100_CHX_vs_U1_WT_100_EtOH_dPSI  = minmaxall_dPSI[ which(! is.na(minmaxall_dPSI$dPSI_U1_WT_100_CHX_vs_U1_WT_100_EtOH )), "dPSI_U1_WT_100_CHX_vs_U1_WT_100_EtOH", drop = F] 

# run.03.DSG_counts_plot_only_ZG-2022-05251
R.Version()
rm(list=ls())
library(gplots)
# plot ##
library(ggplot2)
library(gridExtra)
library(grid)
library(withr); # in the Packages withr, select the 2.4.2 version  shown as library(withr, lib.loc = "/opt/R/4.0.3/lib/R/library")

#setwd("/home/dhuh/project_RNAseq/TST11872_NGN2_HTT_9compound_profiling/analysis.03.splice_analysis/")
setwd("/home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/code/ZG_analysis.03.splice_analysis_1/") #
pformat="/home/dhuh/software/R/R_modified/pformat_whitebG.r"
jet=colorRampPalette(c("blue","green","yellow","orange","darkred")) # make gradient of colors


###############
# din="/home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/code/ZG_analysis.03.splice_analysis/" # din="./res.02.DSG_counts/"
# fin="binary_dPSIrm0.3_dPSIlc0.25_padj0.05_EdPSI0.3_PdPSI0.9_M50.csv"
din="/home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/code/ZG_analysis.03.splice_analysis_1/" # din="./res.02.DSG_counts/"
fin="binary_dPSIrm0.3_dPSIlc0.25_padj0.05_EdPSI0.3_PdPSI0.9_M502022-04-14.csv" #both 04-14-and 04-14-01 are maked with nMnM fin="binary_dPSIrm0.3_dPSIlc0.25_padj0.05_EdPSI0.3_PdPSI0.9_M502022-04-14-0.csv"

param=gsub(".csv","",gsub("binary_","",fin))

dPSI_bi=read.csv( paste0(din,fin), stringsAsFactors=F, row.names=1, check.names=F)
dim(dPSI_bi)
head(dPSI_bi[, 1:10])

colnames(dPSI_bi)  = str_replace_all( colnames(dPSI_bi) , "nMnM", "nM" ) #2022-04-17 htttb$V1 = str_replace_all( htttb$V1 , "nMnM", "nM") htttb$V1  = str_replace_all( htttb$V1 , "BIO-", "" )
##### 2022-05-15 
colnames(dPSI_bi)
colnames_dPSI_bi = colnames(dPSI_bi)

#conctemp = gsub("uM","000nM",conctemp) #uM to nM
conctemp = sapply( strsplit(   colnames_dPSI_bi ,"-") ,"[[", 3)
conctemp = sprintf("%05d",as.numeric(  gsub("nM","", conctemp  ) )) #add padding zeros， return back in May-15-2022 ZG
conctemp


conctemp=paste0(#sapply(strsplit(comp,"-"),"[[",2),"-",
  sapply(strsplit( colnames_dPSI_bi ,"-"),"[[",1),"-",
  sapply(strsplit( colnames_dPSI_bi,"-"),"[[", 2),"-",
  #conctemp) #,"nM")
  conctemp,"nM")  # this line ia match the padding zeros options============

colnames(dPSI_bi) = conctemp

##########################################
# ## plot number of DSG per dPSI bracket #
##########################################

## total number of DSG ###
y=colSums(dPSI_bi) ##################### get the totall DS events
y=y[order(names(y), decreasing=T)]
names(y)=gsub("dPSI", "", names(y))
y

fout=paste0("binary_numDSG_",param,".png")
colorr=c( rep(rgb(0.7,0.7,0.7),4),rep(rgb(0.3,0.3,0.3),4)   )
png(fout,width=800, height=length(y)*25)
source(pformat)
par(mar=c(10,20,1,1))
#bp=barplot(y, xlim=c(0,max(y)*1.2),border=NA, xlab="number(DSG)", names.arg=gsub("dPSI","",names(y) ),
bp=barplot(y,  xlim = c(0, max(y)*1.2 ), border=NA,  names.arg=gsub("dPSI","", names(y) ),
           las=2,  cex.axis=1.2,  cex.names=1.5, #cex.axis	 #           expansion factor for numeric axis labels.
           horiz=T, col=colorr,
           sub = "number(DSG)", font.sub = 4,  cex.sub = 2.0)  #http://howtoinr.weebly.com/customize-labels1.html col.sub = "Red",
text(y, bp, labels = y, pos=4, cex=1.2, offset = 0.3) # lable the differenrtial gene count 
dev.off()

########################################################
numDSG=as.data.frame(cbind(names(y),y))
colnames(numDSG)=c("cellline_treatment","num_DSG")
numDSG$cellline_treatment=gsub(" ","",numDSG$cellline_treatment)

colorr= c( rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7))

colorr2= c( rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7))

##############################################################     (1) leafcutter   ##################### following used 0525 
## dPSI of HTT 'chr4:3212709-3213958|chr4:3212709:3213622' (hg38) ###                                             run.03.DSG_counts_plot_only_ZG-2022-04-07-loose_question2.R
# grep 'chr4:3212709' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi_start_only_loose.csv #ZG 2022-04-07:5min
# grep 'chr4:3212709-3213958|chr4:3212709:3213622' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi.tst 
# grep '3213622' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi_toxic.csv
# grep   'ENSG00000197386.12' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi_ZG_full_list_tmp.csv #
# [filename]chr,strand,geneSymbol,GeneID,Event,Algorithm,FDR,PValue,dPSI,M,PSI_1,PSI_2,Event_info,Annotation_leafcutter,Cutoff_dPSI,Event_type,Junc_coords,PdPSI
#fin2="./res.02.DSG_counts/HTT_eoi.txt"  # event of interests eoi
#fin2="./HTT_eoi_Dann_leafcutter.txt"  # event of interests eoi, ####### Note by ZG, only came from leafcutter
fin2="./HTT_eoi_start_only_loose.csv"  # event of interests eoi
htttb=read.csv(fin2,stringsAsFactors=F,header=F) # already "HTT_eoi.txt" is leafcutter only
head(htttb)
tail(htttb)
dim(htttb)

# htttb$V1  = str_replace_all( htttb$V1 , "nMnM", "nM" )   # 2022-04-17
# htttb$V1  = str_replace_all( htttb$V1 , "BIO-", "" )   # 2022-04-17

comp=sapply( strsplit(  gsub("TST11872_","", sapply( strsplit(htttb$V1,"/"),"[[",11) ) , "_master_table"), "[[", 1)
comp
## format conc #
conctemp=sapply(strsplit(comp,"-"),"[[",4)
conctemp=gsub("uM","000nM",conctemp) #uM to nM
conctemp=sprintf("%05d",as.numeric(gsub("nM","",conctemp))) #add padding zeros， return back in May-15-2022 ZG
conctemp

conctemp=paste0(#sapply(strsplit(comp,"-"),"[[",2),"-",
                sapply(strsplit(comp,"-"),"[[",3),"-",
                sapply(strsplit(comp,"-"),"[[",1),"-",
                #conctemp) #,"nM")
                conctemp,"nM")  # this line ia match the padding zeros options============
#conctemp=gsub("dPSI","",conctemp)
conctemp

htttb$V1=conctemp
head(htttb)
dim(htttb)

htttb = htttb[ grepl("coord:chr4:3212709-3213958", htttb$V13) ,  ] # data[,grepl("search_string", colnames(data))] seleted conatain skipping elments
htttb = htttb[ which (htttb$V9 < 0) ,  ] # data[,grepl("search_string", colnames(data))] seleted conatain skipping elments

htttb=htttb[order(htttb$V1,decreasing=F),]
htttb[, c("V1", "V9", "V13")] 

# https://chartio.com/resources/tutorials/how-to-sort-a-data-frame-by-multiple-columns-in-r/
htttb = htttb[  with(htttb, order(V1, V9)),  ]

# clean up #
htttb=htttb[!duplicated(htttb$V1),]
head(htttb)
dim(htttb)
htttb


# check padj # : only BIO-2136770-NGN2-00300nM has p.adj 0.066
htttb[htttb$V7 > 0.05,]

#htttb_majiq = htttb[htttb$V6 == "majiq", ] # majiq
htttb_leafcutter = htttb[htttb$V6 == "leafcutter", ] # leafcutter htttb_leafcutter=htttb                    ################################################################################### >>>>>>>> laefcutter ALL

# check padj # : only BIO-2136770-NGN2-00300nM has p.adj 0.066
#htttb_leafcutter[htttb_leafcutter$V7 > 0.05,]

# merge table: numDSG and dPSI  #
dPSIeoi=as.data.frame(cbind(htttb_leafcutter$V1,htttb_leafcutter$V9))
dPSIeoi

colnames(dPSIeoi)=c("cellline_treatment","dPSI_eoi")
dPSIeoi$cellline_treatment=gsub(" ","",dPSIeoi$cellline_treatment)

tb2=merge(dPSIeoi,numDSG,by.x="cellline_treatment",by.y="cellline_treatment",all=T)
tb2$dPSI_eoi= as.numeric(as.vector(tb2$dPSI_eoi)) # add the  "-" remove the _ 04-07
tb2$num_DSG=as.numeric(as.vector(tb2$num_DSG))

tb2$compound=paste0("BIO-",sapply(strsplit(tb2$cellline_treatment,"-"),"[[", 1)) # 1 and 2 chaned the plots

tb2=tb2[order(tb2$cellline_treatment,decreasing=T),]
tb2

g.mid<-ggplot(tb2,aes(x=1,y=cellline_treatment))+geom_text(aes(label=cellline_treatment))+
  ggtitle("")+
  ylab(NULL)+
  scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
  theme(axis.title=element_blank(),
        panel.grid=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank(),
        panel.background=element_blank(),
        axis.text.x=element_text(color=NA),
        axis.ticks.x=element_line(color=NA),
        plot.margin = unit(c(1,-1,1,-1), "mm"))

g1 <- ggplot(data = tb2, aes(x = cellline_treatment, y = dPSI_eoi, fill=compound )) +xlab(NULL)+
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("dPSI_HTT_eoi") +
  theme(axis.title.x = element_blank(), axis.text.x=element_text(size=12), 
        axis.title.y = element_blank(), 
        axis.text.y = element_blank(), 
        axis.ticks.y = element_blank(), 
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,-1,1,0), "mm")) +
  coord_flip() +  #+scale_y_reverse()  # dPSI is negative to begin with.
  scale_fill_manual(values = colorr)


g2 <- ggplot(data = tb2, aes(x = cellline_treatment, y =num_DSG, fill=compound)) +
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("Number of DSG") +
  theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x=element_text(size=14),
        axis.text.y = element_blank(), axis.ticks.y = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,0,1,-1), "mm")) +
  coord_flip()+
  scale_fill_manual(values = colorr2)

gg1 <- ggplot_gtable(ggplot_build(g1))
gg2 <- ggplot_gtable(ggplot_build(g2))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))

fout=paste0("dPSI_HTT_eoi_binary_numDSG_",param,"leafcutter_all_with_toxic_exon_0525.png")
png(fout,width=600, height=600)
grid.arrange(gg.mid,gg1,gg2,ncol=3,widths=c(3/9,2/9,5/9))
dev.off()

#======= (2) =========== RAW Dann ===============================================HERE3###################################==================0515
fin2="./HTT_eoi_Dann_leafcutter.txt"  # event of interests eoi
htttb=read.csv(fin2,stringsAsFactors=F,header=F) # already "HTT_eoi.txt" is leafcutter only
head(htttb)
dim(htttb)

comp=sapply( strsplit(  gsub("TST11872_","",sapply(strsplit(htttb$V1,"/"),"[[",11)) , "_master_table"), "[[", 1)
comp
## format conc #
conctemp=sapply(strsplit(comp,"-"),"[[",4)
conctemp=gsub("uM","000nM",conctemp) #uM to nM #conctemp=gsub("uM","000nM",conctemp) #uM to nM
conctemp=sprintf("%05d",as.numeric(gsub("nM","",conctemp))) # add padding zeros 05-15
conctemp

conctemp=paste0(#sapply(strsplit(comp,"-"),"[[",2),"-",
  sapply(strsplit(comp,"-"),"[[",3),"-",
  sapply(strsplit(comp,"-"),"[[",1),"-",
  # conctemp) #,"nM")
  conctemp,"nM")   # add padding zeros 05-15
#conctemp=gsub("dPSI","",conctemp)
conctemp

htttb$V1=conctemp

# clean up #
htttb=htttb[!duplicated(htttb$V1),]
head(htttb)
dim(htttb)
htttb=htttb[order(htttb$V1,decreasing=F),]

# check padj # : only BIO-2136770-NGN2-00300nM has p.adj 0.066
htttb[htttb$V7 > 0.05,]

# merge table: numDSG and dPSI  #
dPSIeoi=as.data.frame(cbind(htttb$V1,htttb$V9))
colnames(dPSIeoi)=c("cellline_treatment","dPSI_eoi")
dPSIeoi$cellline_treatment=gsub(" ","",dPSIeoi$cellline_treatment)
head(dPSIeoi)


numDSG=as.data.frame(cbind(names(y),y))
colnames(numDSG)=c("cellline_treatment","num_DSG")
numDSG$cellline_treatment=gsub(" ","",numDSG$cellline_treatment)
numDSG

tb2=merge(dPSIeoi,numDSG,by.x="cellline_treatment",by.y="cellline_treatment",all=T)
tb2$dPSI_eoi=as.numeric(as.vector(tb2$dPSI_eoi))
tb2$num_DSG=as.numeric(as.vector(tb2$num_DSG))
tb2$compound=paste0("BIO-",sapply(strsplit(tb2$cellline_treatment,"-"),"[[",2))

tb2=tb2[order(tb2$cellline_treatment,decreasing=T),]
tb2



g.mid<-ggplot(tb2,aes(x=1,y=cellline_treatment))+geom_text(aes(label=cellline_treatment))+
  ggtitle("")+
  ylab(NULL)+
  scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
  theme(axis.title=element_blank(),
        panel.grid=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank(),
        panel.background=element_blank(),
        axis.text.x=element_text(color=NA),
        axis.ticks.x=element_line(color=NA),
        plot.margin = unit(c(1,-1,1,-1), "mm"))
      
g1 <- ggplot(data = tb2, aes(x = cellline_treatment, y = dPSI_eoi, fill=compound )) +xlab(NULL)+
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("dPSI_HTT_eoi") +
  theme(axis.title.x = element_blank(), axis.text.x=element_text(size=12), 
        axis.title.y = element_blank(), 
        axis.text.y = element_blank(), 
        axis.ticks.y = element_blank(), 
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,-1,1,0), "mm")) +
  coord_flip() +  #+scale_y_reverse()  # dPSI is negative to begin with.
  scale_fill_manual(values = colorr)


g2 <- ggplot(data = tb2, aes(x = cellline_treatment, y =num_DSG, fill=compound)) +
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("Number of DSG") +
  theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x=element_text(size=14),
        axis.text.y = element_blank(), axis.ticks.y = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,0,1,-1), "mm")) +
  coord_flip()+
  scale_fill_manual(values = colorr2)

gg1 <- ggplot_gtable(ggplot_build(g1))
gg2 <- ggplot_gtable(ggplot_build(g2))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))

# fout=paste0("dPSI_HTT_eoi_binary_numDSG_",param,".png")
# png(fout,width=600, height=600)
# grid.arrange(gg.mid,gg1,gg2,ncol=3,widths=c(3/9,2/9,5/9))
# dev.off()

fout=paste0("dPSI_HTT_eoi_binary_numDSG_",param,"toxic_Dann.png")
png(fout,       width=600, height=600)
grid.arrange(gg.mid,gg1,gg2,ncol=3,widths=c(3/9,2/9,5/9))
dev.off()

#####(3)# rMATS
################################################################################### following not used <<<<<<<<<<<<<<<<<<<<< NOT USED !!!!!!
## dPSI of HTT 'chr4:3212709-3213958|chr4:3212709:3213622' (hg38) ###
# grep 'chr4:3212709-3213958|chr4:3212709:3213622' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi.tst #
# grep  -w HTT /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi_ZG_full_list.csv #
# ==== >>>>>>>>.. grep   'ENSG00000197386.12' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi_ZG_full_list_tmp.csv #
# [filename]chr,strand,geneSymbol,GeneID,Event,Algorithm,FDR,PValue,dPSI,M,PSI_1,PSI_2,Event_info,Annotation_leafcutter,Cutoff_dPSI,Event_type,Junc_coords,PdPSI
#fin2="./res.02.DSG_counts/HTT_eoi.txt"  # event of interests eoi
fin2="./HTT_eoi_ZG_full_list_tmp.csv"  # event of interests eoi, ####### Note by ZG, only came from leafcutter

#fin2="./res.02.DSG_counts/HTT_eoi.txt"  # event of interests eoi
htttb=read.csv(fin2,stringsAsFactors=F,header=F) # already "HTT_eoi.txt" is leafcutter only
head(htttb)
dim(htttb) # 15012

comp=sapply( strsplit(  gsub("TST11872_","", sapply( strsplit(htttb$V1,"/"),"[[",11) ) , "_master_table"), "[[", 1)
comp
## format conc #
conctemp=sapply(strsplit(comp,"-"),"[[",4)
conctemp=gsub("uM","000nM",conctemp) #uM to nM
conctemp=sprintf("%05d",as.numeric(gsub("nM","",conctemp))) #add padding zeros， return back in May-15-2022 ZG
conctemp

conctemp=paste0(#sapply(strsplit(comp,"-"),"[[",2),"-",
  sapply(strsplit(comp,"-"),"[[",3),"-",
  sapply(strsplit(comp,"-"),"[[",1),"-",
  #conctemp) #,"nM")
  conctemp,"nM")  # this line ia match the padding zeros options============
#conctemp=gsub("dPSI","",conctemp)
conctemp

htttb$V1=conctemp
head(htttb)
dim(htttb)

# htttb$V1  = str_replace_all( htttb$V1 , "nMnM", "nM" )   # 2022-04-17
# htttb$V1  = str_replace_all( htttb$V1 , "BIO-", "" )   # 2022-04-17

htttb_rmats = htttb[htttb$V6 == "rmats", ]
head(htttb_rmats)
dim(htttb_rmats)  #1120

head(htttb_rmats,2)
dim(htttb_rmats)
table(htttb_rmats$V5)
# A3SS A5SS  MXE   RI   SE 
# 78  156  175   39  712 

htttb_rmats = htttb_rmats[ which(htttb_rmats$V5 != "A3SS"), ]
htttb_rmats = htttb_rmats[ which(htttb_rmats$V5 != "A5SS"), ]
htttb_rmats = htttb_rmats[ which(htttb_rmats$V5 != "MXE"), ]

#dPSI of HTT 'chr4:3212709-3213958|chr4:3212709:3213622' (hg38) ###
# RI
# [1] "riExonStart_0base:3187650"      "riExonEnd:3189093"              "upstreamES:3187650"             "upstreamEE:3187886"             "downstreamES:3188950"           "downstreamEE:3189093"           "IJC_SAMPLE_1:4,1,1"             "SJC_SAMPLE_1:201,106,138"       "IJC_SAMPLE_2:4,3,0"             "SJC_SAMPLE_2:144,13,30"        
# [11] "IncFormLen:1163"                "SkipFormLen:99"                 "PSI_1_persub:0.002,0.001,0.001" "PSI_2_persub:0.002,0.019,0.0"  
# SE
# [[503]]
# [1] "exonStart_0base:3086938"    "exonEnd:3087022"            "upstreamES:3074680"         "upstreamEE:3075088"         "downstreamES:3099273"       "downstreamEE:3099394"       "IJC_SAMPLE_1:133,110,119"   "SJC_SAMPLE_1:1,0,0"         "IJC_SAMPLE_2:161,93,56"     "SJC_SAMPLE_2:0,0,0"         "IncFormLen:183"             "SkipFormLen:99"            
# [13] "PSI_1_persub:0.986,1.0,1.0" "PSI_2_persub:1.0,1.0,1.0"  

# if(htttb_rmats$V5 == "RI"){
# htttb_rmats$Start_location  = sapply(  strsplit( sapply( strsplit(htttb_rmats$V13, '|', fixed=TRUE) , "[[", 1)  ,  ':', fixed=TRUE) , "[[", 2 )  
# htttb_rmats$End_location    = sapply(  strsplit( sapply( strsplit(htttb_rmats$V13, '|', fixed=TRUE) , "[[", 2)  ,  ':', fixed=TRUE) , "[[", 2 )  
# } else if(htttb_rmats$V5 == "SE") {
# htttb_rmats$Start_location2  = sapply(  strsplit( sapply( strsplit(htttb_rmats$V13, '|', fixed=TRUE) , "[[", 3)  ,  ':', fixed=TRUE) , "[[", 2 )  
# htttb_rmats$End_location2    = sapply(  strsplit( sapply( strsplit(htttb_rmats$V13, '|', fixed=TRUE) , "[[", 4)  ,  ':', fixed=TRUE) , "[[", 2 )  
# }

htttb_rmats$Start_location  = sapply(  strsplit( sapply( strsplit(htttb_rmats$V13, '|', fixed=TRUE) , "[[", 5)  ,  ':', fixed=TRUE) , "[[", 2 )  
htttb_rmats$End_location    = sapply(  strsplit( sapply( strsplit(htttb_rmats$V13, '|', fixed=TRUE) , "[[", 6)  ,  ':', fixed=TRUE) , "[[", 2 )  
htttb_rmats$chr             = "chr4"    #  the vertical line | has to be excaped with \\ or fixted =T htttb_rmats$chr              = sapply(  strsplit( htttb_rmats$V1, ':', fixed=TRUE) , "[[", 2)    #  the vertical line | has to be excaped with \\ or fixted =T
htttb_rmats$FDR             =    htttb_rmats$V7 
htttb_rmats$dPSI            =    htttb_rmats$V9 

head(htttb_rmats)
dim(htttb_rmats)  #751

htttb_rmats = htttb_rmats[ which(htttb_rmats$Start_location > 3212709), ] # dim(htttb_rmats[ which(htttb_rmats$Start_location > 3212709), ])

# #dim(htttb_rmats1)  #751
# htttb_rmats2 = htttb_rmats1[ which(htttb_rmats1$Start_location < 3213958), ] # htttb_rmats = dim(htttb_rmats[ which(htttb_rmats$Start_location < 3213958), ] )
# htttb_rmats2


htttb_rmats

# library(GenomicRanges)
# htttb_rmats_GR = makeGRangesFromDataFrame(htttb_rmats,
#                          keep.extra.columns=T,
#                          ignore.strand=FALSE,
#                          seqinfo=NULL,
#                          seqnames.field= "chr",
#                          start.field="Start_location",
#                          end.field="End_location",
#                          strand.field="V2",
#                          starts.in.df.are.0based=T)
# htttb_rmats_GR
# # x1 <- "chr2:56-125"
# # as(x1, "GRanges")
# HTT_eoi <- GRanges(seqnames=c("chr4"), 
#                    strand=c("+"),
#                    ranges=IRanges(c(3212709,3212709), c(3213958, 3213622) )
#                   )
# 
# htttb_rmats_eoi = subsetByOverlaps(htttb_rmats_GR, HTT_eoi) # found overlaps
# htttb_rmats_eoi_df = as.data.frame(htttb_rmats_eoi)  
# head(htttb_rmats_eoi_df )

# comp=sapply( strsplit(  gsub("TST11872_","",sapply(strsplit(htttb_rmats_eoi_df$V1,"/"),"[[",11)) , "_master_table"), "[[", 1)
# ## format conc #
# conctemp=sapply(strsplit(comp,"-"),"[[",4)
# conctemp=gsub("uM","000nM",conctemp) #uM to nM
# library(withr); conctemp=sprintf("%05d",as.numeric(gsub("nM","",conctemp))) #add padding zeros
# 
# conctemp=paste0(sapply(strsplit(comp,"-"),"[[",2),"-",
#                 sapply(strsplit(comp,"-"),"[[",3),"-",
#                 sapply(strsplit(comp,"-"),"[[",1),"-",
#                 conctemp,"nM")
# conctemp=gsub("dPSI","",conctemp)
# htttb_rmats_eoi_df$V1=conctemp

# clean up #

htttb[, c("V1", "V9", "V13")] 

# https://chartio.com/resources/tutorials/how-to-sort-a-data-frame-by-multiple-columns-in-r/
htttb = htttb[  with(htttb, order(V1, dPSI)),  ]


# FDR   dPSI

htttb_rmats_eoi_df=htttb_rmats_eoi_df[!duplicated(htttb_rmats_eoi_df$V1),]
head(htttb_rmats_eoi_df) #View(htttb_rmats_eoi_df)
htttb_rmats_eoi_df=htttb_rmats_eoi_df[order(htttb_rmats_eoi_df$V1,decreasing=F),]

# check padj # : only BIO-2136770-NGN2-00300nM has p.adj 0.066
htttb_rmats_eoi_df[htttb_rmats_eoi_df$V7 > 0.05,]

# merge table: numDSG and dPSI  #
dPSIeoi=as.data.frame(cbind(htttb_rmats_eoi_df$V1,htttb_rmats_eoi_df$V9))
colnames(dPSIeoi)=c("cellline_treatment","dPSI_eoi")
dPSIeoi$cellline_treatment=gsub(" ","",dPSIeoi$cellline_treatment)

numDSG=as.data.frame(cbind(names(y),y))
colnames(numDSG)=c("cellline_treatment","num_DSG")
numDSG$cellline_treatment=gsub(" ","",numDSG$cellline_treatment)

tb2=merge(dPSIeoi,numDSG,by.x="cellline_treatment",by.y="cellline_treatment",all=T)
tb2$dPSI_eoi = - as.numeric(as.vector(tb2$dPSI_eoi)) # add the -
tb2$num_DSG=as.numeric(as.vector(tb2$num_DSG))
tb2$compound=paste0("BIO-",sapply(strsplit(tb2$cellline_treatment,"-"),"[[",2))

tb2=tb2[order(tb2$cellline_treatment,decreasing=T),]


# plot ##
library(ggplot2)
library(gridExtra)
library(grid)

colorr= c( rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7))

colorr2= c( rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7))


g.mid<-ggplot(tb2,aes(x=1,y=cellline_treatment))+geom_text(aes(label=cellline_treatment))+
  ggtitle("")+
  ylab(NULL)+
  scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
  theme(axis.title=element_blank(),
        panel.grid=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank(),
        panel.background=element_blank(),
        axis.text.x=element_text(color=NA),
        axis.ticks.x=element_line(color=NA),
        plot.margin = unit(c(1,-1,1,-1), "mm"))

g1 <- ggplot(data = tb2, aes(x = cellline_treatment, y = dPSI_eoi, fill=compound )) +xlab(NULL)+
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("dPSI_HTT_eoi") +
  theme(axis.title.x = element_blank(), axis.text.x=element_text(size=12), 
        axis.title.y = element_blank(), 
        axis.text.y = element_blank(), 
        axis.ticks.y = element_blank(), 
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,-1,1,0), "mm")) +
  coord_flip() +  #+scale_y_reverse()  # dPSI is negative to begin with.
  scale_fill_manual(values = colorr)


g2 <- ggplot(data = tb2, aes(x = cellline_treatment, y =num_DSG, fill=compound)) +
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("Number of DSG") +
  theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x=element_text(size=14),
        axis.text.y = element_blank(), axis.ticks.y = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,0,1,-1), "mm")) +
  coord_flip()+
  scale_fill_manual(values = colorr2)

gg1 <- ggplot_gtable(ggplot_build(g1))
gg2 <- ggplot_gtable(ggplot_build(g2))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))

fout=paste0("dPSI_HTT_eoi_binary_numDSG_",param,"rMATS.png")
png(fout,width=600, height=600)
grid.arrange(gg.mid,gg1,gg2,ncol=3,widths=c(3/9,2/9,5/9))
dev.off()

 
######### (4) majiq
################################################################################### Majiq =================================================================================================
## dPSI of HTT 'chr4:3212709-3213958|chr4:3212709:3213622' (hg38) ###
# grep 'chr4:3212709-3213958|chr4:3212709:3213622' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi.tst #
# grep  -w HTT /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi_ZG_full_list.csv #
# grep   'ENSG00000197386.12' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi_ZG_full_list_tmp.csv # ===================<<<<<<<<<<<<<<<<<<<<
# [filename]chr,strand,geneSymbol,GeneID,Event,Algorithm,FDR,PValue,dPSI,M,PSI_1,PSI_2,Event_info,Annotation_leafcutter,Cutoff_dPSI,Event_type,Junc_coords,PdPSI
#fin2="./res.02.DSG_counts/HTT_eoi.txt"  # event of interests eoi
fin2="./HTT_eoi_ZG_full_list_tmp.csv"  # event of interests eoi, ####### Note by ZG, only came from leafcutter

#fin2="./res.02.DSG_counts/HTT_eoi.txt"  # event of interests eoi
htttb=read.csv(fin2,stringsAsFactors=F,header=F) # already "HTT_eoi.txt" is leafcutter only
head(htttb)
dim(htttb)

htttb_majiq = htttb[htttb$V6 == "majiq", ] # majiq

head(htttb_majiq)
head(htttb_majiq, 100)
dim(htttb_majiq)


comp=sapply( strsplit(  gsub("TST11872_","",sapply(strsplit(htttb_majiq$V1,"/"),"[[",11)) , "_master_table"), "[[", 1)

comp
## format conc #
conctemp=sapply(strsplit(comp,"-"),"[[",4) # 2022-04-17 conctemp=sapply(strsplit(comp,"-"),"[[",4)
conctemp=gsub("uM","000nM",conctemp) #uM to nM
#library(withr); 
conctemp=sprintf("%05d",as.numeric(gsub("nM","",conctemp))) #add padding zeros

# conctemp=paste0(sapply(strsplit(comp,"-"),"[[",2),"-",
#                 sapply(strsplit(comp,"-"),"[[",3),"-",
#                 sapply(strsplit(comp,"-"),"[[",1),"-",
#                 conctemp,"nM") 
conctemp=paste0(sapply(strsplit(comp,"-"),"[[",3),"-",
                sapply(strsplit(comp,"-"),"[[",1),"-",
                #conctemp) # double nM  
                conctemp,"nM")  # this line ia match the padding zeros options============
#conctemp=gsub("dPSI","",conctemp)
conctemp

htttb_majiq$V1=conctemp

head(htttb_majiq)
dim(htttb_majiq)

#################
# chr4:3212709-3213958 1249
# chr4:3212709-3213622 913

htttb_majiq$Junction_start_postion = sapply( strsplit(htttb_majiq$V17,"-"), "[[", 1)
htttb_majiq$Junction_stop_postion  = sapply( strsplit(htttb_majiq$V17,"-"), "[[", 2)

#####
htttb_majiq = htttb_majiq[  htttb_majiq$Junction_start_postion == "3212709", ] # [1] 1038   20
htttb_majiq = htttb_majiq[  as.numeric(htttb_majiq$Junction_start_postion ) < "3213959", ] # [1] 1038   20
dim(htttb_majiq)

typeof(htttb_majiq$Junction_start_postion) 
length(htttb_majiq$Junction_stop_postion) 

#htttb_majiq$intron_inclusion = htttb_majiq[ as.numeric(htttb_majiq$Junction_stop_postion) < 3213958 ,    ] # [1] 418  20
htttb_majiq$intron_inclusion = as.numeric(htttb_majiq$Junction_stop_postion) < 3213958  # [1] 418  20

dim(htttb_majiq)
head(htttb_majiq)

library(dplyr)
htttb_majiq %>% group_by( V1)                  %>% summarise(intron_retension_count = n())
intron_inclusion_ratio = htttb_majiq %>% group_by( V1,intron_inclusion) %>% summarise(intron_retension_count = n()) %>% arrange( V1, intron_inclusion ) 

intron_inclusion_ratio_False = intron_inclusion_ratio[ intron_inclusion_ratio$intron_inclusion == F,  ]

names(intron_inclusion_ratio_False)[names(intron_inclusion_ratio_False) == 'intron_retension_count'] <- "span_count"

intron_inclusion_ratio_True  = intron_inclusion_ratio[ intron_inclusion_ratio$intron_inclusion == T,  ]
#names(intron_inclusion_ratio_True)[names(intron_inclusion_ratio_True) == 'intron_retension_count'] <- "intron_inclusion_count"

intension_ratio = merge(intron_inclusion_ratio_True , intron_inclusion_ratio_False, by= "V1",all=T)
intension_ratio$rention_ratio = intension_ratio$intron_retension_count / ( intension_ratio$intron_retension_count  + intension_ratio$span_count)
intension_ratio


# <- with(df, ifelse(b > 5, b/c, NA))

#################
#################


# clean up #
htttb_majiq$dPSI_w =  - abs(htttb_majiq$V9)  # critall changes , keep the line wiht larget V9 only 2022-04-07
htttb_majiq        =  htttb_majiq[order( htttb_majiq$dPSI_w ,decreasing=F) , ] # critall changes , keep the line wiht larget V9 only 2022-04-07

htttb_majiq=htttb_majiq[!duplicated(htttb_majiq$V1),]
head(htttb_majiq) #View(htttb_majiq)
dim(htttb_majiq) #View(htttb_majiq)
htttb_majiq=htttb_majiq[order(htttb_majiq$V1,decreasing=F),]
htttb_majiq

# check padj # : only BIO-2136770-NGN2-00300nM has p.adj 0.066
#htttb_majiq[htttb_majiq$V7 > 0.05,]

# merge table: numDSG and dPSI  #
dPSIeoi=as.data.frame(cbind(htttb_majiq$V1,htttb_majiq$dPSI_w))
colnames(dPSIeoi)=c("cellline_treatment","dPSI_eoi")
dPSIeoi$cellline_treatment=gsub(" ","",dPSIeoi$cellline_treatment)

numDSG=as.data.frame(cbind(names(y),y))
colnames(numDSG)=c("cellline_treatment","num_DSG")
numDSG$cellline_treatment=gsub(" ","",numDSG$cellline_treatment)
numDSG
# htttb$V1  = str_replace_all( htttb$V1 , "nMnM", "nM" )   # 2022-04-17
# htttb$V1  = str_replace_all( htttb$V1 , "BIO-", "" )   # 2022-04-17
# dPSIeoi$cellline_treatment  = str_replace_all( dPSIeoi$cellline_treatment , "BIO-", "" )   # 2022-04-17
dPSIeoi 

tb2=merge(dPSIeoi,numDSG,by.x="cellline_treatment",by.y="cellline_treatment",all=T)
tb2$dPSI_eoi= as.numeric(as.vector(tb2$dPSI_eoi)) # add the  "-" remove the _ 04-07
tb2$num_DSG=as.numeric(as.vector(tb2$num_DSG))
tb2$compound=paste0("BIO-",sapply(strsplit(tb2$cellline_treatment,"-"),"[[",2))

tb2=tb2[order(tb2$cellline_treatment,decreasing=T),]
tb2


g.mid<-ggplot(tb2,aes(x=1,y=cellline_treatment))+geom_text(aes(label=cellline_treatment))+
  ggtitle("")+
  ylab(NULL)+
  scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
  theme(axis.title=element_blank(),
        panel.grid=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank(),
        panel.background=element_blank(),
        axis.text.x=element_text(color=NA),
        axis.ticks.x=element_line(color=NA),
        plot.margin = unit(c(1,-1,1,-1), "mm"))

g1 <- ggplot(data = tb2, aes(x = cellline_treatment, y = dPSI_eoi, fill=compound )) +xlab(NULL)+
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("dPSI_HTT_eoi") +
  theme(axis.title.x = element_blank(), axis.text.x=element_text(size=12), 
        axis.title.y = element_blank(), 
        axis.text.y = element_blank(), 
        axis.ticks.y = element_blank(), 
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,-1,1,0), "mm")) +
  coord_flip() +  #+scale_y_reverse()  # dPSI is negative to begin with.
  scale_fill_manual(values = colorr)


g2 <- ggplot(data = tb2, aes(x = cellline_treatment, y =num_DSG, fill=compound)) +
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("Number of DSG") +
  theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x=element_text(size=14),
        axis.text.y = element_blank(), axis.ticks.y = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,0,1,-1), "mm")) +
  coord_flip()+
  scale_fill_manual(values = colorr2)

gg1 <- ggplot_gtable(ggplot_build(g1))
gg2 <- ggplot_gtable(ggplot_build(g2))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))

fout=paste0("dPSI_HTT_eoi_binary_numDSG_",param,"majiq_all_with_toxic_exon.png")
png(fout,width=600, height=600)
grid.arrange(gg.mid,gg1,gg2,ncol=3,widths=c(3/9,2/9,5/9))
dev.off()

# run.03.DSG_counts_plot_only.R
R.Version()
rm(list=ls())
library(gplots)
# plot ##
library(ggplot2)
library(gridExtra)
library(grid)
library(stringr)
library(withr); # in the Packages withr, select the 2.4.2 version  shown as library(withr, lib.loc = "/opt/R/4.0.3/lib/R/library")


# din="/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230824054737_Zhen.Gao_GM_noSMN1/DSG_Result/From_DNANenxs_Master_analysis.02.splicing_offtargets/" 
 din="/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230823221304_Zhen.Gao_ShSy5Y_GRCh38/DSG_Result/From_DNANenxs_Master_analysis.02.splicing_offtargets/" 
setwd(din) 
# setwd("/home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/code/ZG_analysis.03.splice_analysis_1/") #
pformat="/edgehpc/dept/compbio/users/dhuh/software/R/R_modified/pformat_whitebG.r"
jet=colorRampPalette(c("blue","green","yellow","orange","darkred")) # make gradient of colors

fin="binary_dPSIrm0.3_dPSIlc0.25_padj0.05_EdPSI0.3_PdPSI0.9_M50.csv" #fin="binary_dPSIrm0.3_dPSIlc0.25_padj0.05_EdPSI0.3_PdPSI0.9_M502022-04-14.csv" #

param=gsub(".csv","",gsub("binary_","",fin))

dPSI_bi=read.csv( paste0(din,fin), stringsAsFactors=F, row.names=1, check.names=F)
dim(dPSI_bi)
head(dPSI_bi[, 1:10])

#colnames(dPSI_bi)  = str_replace_all( colnames(dPSI_bi) , "nMnM", "nM" ) #2022-04-17 htttb$V1 = str_replace_all( htttb$V1 , "nMnM", "nM") htttb$V1  = str_replace_all( htttb$V1 , "BIO-", "" ) ##### 2022-05-15 
colnames(dPSI_bi)
colnames(dPSI_bi)  =  str_replace_all( colnames(dPSI_bi) , "BIO_", "" ) 
colnames_dPSI_bi = colnames(dPSI_bi)

# #conctemp = gsub("uM","000nM",conctemp) #uM to nM
# conctemp = sapply( strsplit(   colnames_dPSI_bi ,"-") ,"[[", 3)
# conctemp = sprintf("%05d",as.numeric(  gsub("nM","", conctemp  ) )) #add padding zeros， return back in May-15-2022 ZG
# conctemp
# 
# 
# conctemp=paste0(#sapply(strsplit(comp,"-"),"[[",2),"-",
#   sapply(strsplit( colnames_dPSI_bi ,"-"),"[[",1),"-",
#   sapply(strsplit( colnames_dPSI_bi,"-"),"[[", 2),"-",
#   #conctemp) #,"nM")
#   conctemp,"nM")  # this line ia match the padding zeros options============
# 
# colnames(dPSI_bi) = conctemp

##########################################
# ## plot number of DSG per dPSI bracket #
##########################################

## total number of DSG ###
y=colSums(dPSI_bi) ##################### get the totall DS events
y=y[order(names(y), decreasing=T)]
names(y)=gsub("dPSI", "", names(y))
y

fout=paste0("binary_numDSG_",param,"vertical.png")
colorr=c( rep(rgb(0.7,0.7,0.7),4),rep(rgb(0.3,0.3,0.3),4)   )
#colorr=c( rep(rgb(0.7,0.7,0.7),2),rep(rgb(0.3,0.3,0.3),2)   )
png(fout,width=800, height=length(y)*25) # png(fout,width=800, height=length(y)*25)
source(pformat)
par(mar=c(10,30,1,1))
#bp=barplot(y, xlim=c(0,max(y)*1.2),border=NA, xlab="number(DSG)", names.arg=gsub("dPSI","",names(y) ),
bp=barplot(y,  xlim = c(0, max(y)*1.2 ), border=NA,  names.arg=gsub("dPSI","", names(y) ),
           las=2,  cex.axis=1.2,  cex.names=1.5, #cex.axis	 #           expansion factor for numeric axis labels.
           horiz=T, col=colorr,
           sub = "number(DSG)", font.sub = 4,  cex.sub = 2.0)  #http://howtoinr.weebly.com/customize-labels1.html col.sub = "Red",
text(y, bp, labels = y, pos=4, cex=1.2, offset = 0.3) # lable the differenrtial gene count 
dev.off()

########################################################
numDSG=as.data.frame(cbind(names(y),y))
colnames(numDSG)=c("cellline_treatment","num_DSG")
numDSG$cellline_treatment=gsub(" ","",numDSG$cellline_treatment)

colorr= c( rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7))

colorr2= c( rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7))

##############################################################     (1) leafcutter   ##################### following used 0525 
## dPSI of HTT 'chr4:3212709-3213958|chr4:3212709:3213622' (hg38) ###                                             run.03.DSG_counts_plot_only_ZG-2022-04-07-loose_question2.R
# grep 'chr4:3212709' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi_start_only_loose.csv #ZG 2022-04-07:5min
# grep 'chr4:3212709-3213958|chr4:3212709:3213622' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi.tst 
# grep '3213622' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi_toxic.csv
# grep   'ENSG00000197386.12' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi_ZG_full_list_tmp.csv #
# [filename]chr,strand,geneSymbol,GeneID,Event,Algorithm,FDR,PValue,dPSI,M,PSI_1,PSI_2,Event_info,Annotation_leafcutter,Cutoff_dPSI,Event_type,Junc_coords,PdPSI
#fin2="./res.02.DSG_counts/HTT_eoi.txt"  # event of interests eoi
#fin2="./HTT_eoi_Dann_leafcutter.txt"  # event of interests eoi, ####### Note by ZG, only came from leafcutter
fin2="./HTT_eoi_start_only_loose.csv"  # event of interests eoi
htttb=read.csv(fin2,stringsAsFactors=F,header=F) # already "HTT_eoi.txt" is leafcutter only
head(htttb)
tail(htttb)
dim(htttb)

# htttb$V1  = str_replace_all( htttb$V1 , "nMnM", "nM" )   # 2022-04-17
# htttb$V1  = str_replace_all( htttb$V1 , "BIO-", "" )   # 2022-04-17

comp=sapply( strsplit(  gsub("TST11872_","", sapply( strsplit(htttb$V1,"/"),"[[",11) ) , "_master_table"), "[[", 1)
comp
## format conc #
conctemp=sapply(strsplit(comp,"-"),"[[",4)
conctemp=gsub("uM","000nM",conctemp) #uM to nM
conctemp=sprintf("%05d",as.numeric(gsub("nM","",conctemp))) #add padding zeros， return back in May-15-2022 ZG
conctemp

conctemp=paste0(#sapply(strsplit(comp,"-"),"[[",2),"-",
                sapply(strsplit(comp,"-"),"[[",3),"-",
                sapply(strsplit(comp,"-"),"[[",1),"-",
                #conctemp) #,"nM")
                conctemp,"nM")  # this line ia match the padding zeros options============
#conctemp=gsub("dPSI","",conctemp)
conctemp

htttb$V1=conctemp
head(htttb)
dim(htttb)

htttb = htttb[ grepl("coord:chr4:3212709-3213958", htttb$V13) ,  ] # data[,grepl("search_string", colnames(data))] seleted conatain skipping elments
htttb = htttb[ which (htttb$V9 < 0) ,  ] # data[,grepl("search_string", colnames(data))] seleted conatain skipping elments

htttb=htttb[order(htttb$V1,decreasing=F),]
htttb[, c("V1", "V9", "V13")] 

# https://chartio.com/resources/tutorials/how-to-sort-a-data-frame-by-multiple-columns-in-r/
htttb = htttb[  with(htttb, order(V1, V9)),  ]

# clean up #
htttb=htttb[!duplicated(htttb$V1),]
head(htttb)
dim(htttb)
htttb


# check padj # : only BIO-2136770-NGN2-00300nM has p.adj 0.066
htttb[htttb$V7 > 0.05,]

#htttb_majiq = htttb[htttb$V6 == "majiq", ] # majiq
htttb_leafcutter = htttb[htttb$V6 == "leafcutter", ] # leafcutter htttb_leafcutter=htttb                    ################################################################################### >>>>>>>> laefcutter ALL

# check padj # : only BIO-2136770-NGN2-00300nM has p.adj 0.066
#htttb_leafcutter[htttb_leafcutter$V7 > 0.05,]

# merge table: numDSG and dPSI  #
dPSIeoi=as.data.frame(cbind(htttb_leafcutter$V1,htttb_leafcutter$V9))
dPSIeoi

colnames(dPSIeoi)=c("cellline_treatment","dPSI_eoi")
dPSIeoi$cellline_treatment=gsub(" ","",dPSIeoi$cellline_treatment)

tb2=merge(dPSIeoi,numDSG,by.x="cellline_treatment",by.y="cellline_treatment",all=T)
tb2$dPSI_eoi= as.numeric(as.vector(tb2$dPSI_eoi)) # add the  "-" remove the _ 04-07
tb2$num_DSG=as.numeric(as.vector(tb2$num_DSG))

tb2$compound=paste0("BIO-",sapply(strsplit(tb2$cellline_treatment,"-"),"[[", 1)) # 1 and 2 chaned the plots

tb2=tb2[order(tb2$cellline_treatment,decreasing=T),]
tb2

g.mid<-ggplot(tb2,aes(x=1,y=cellline_treatment))+geom_text(aes(label=cellline_treatment))+
  ggtitle("")+
  ylab(NULL)+
  scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
  theme(axis.title=element_blank(),
        panel.grid=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank(),
        panel.background=element_blank(),
        axis.text.x=element_text(color=NA),
        axis.ticks.x=element_line(color=NA),
        plot.margin = unit(c(1,-1,1,-1), "mm"))

g1 <- ggplot(data = tb2, aes(x = cellline_treatment, y = dPSI_eoi, fill=compound )) +xlab(NULL)+
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("dPSI_HTT_eoi") +
  theme(axis.title.x = element_blank(), axis.text.x=element_text(size=12), 
        axis.title.y = element_blank(), 
        axis.text.y = element_blank(), 
        axis.ticks.y = element_blank(), 
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,-1,1,0), "mm")) +
  coord_flip() +  #+scale_y_reverse()  # dPSI is negative to begin with.
  scale_fill_manual(values = colorr)


g2 <- ggplot(data = tb2, aes(x = cellline_treatment, y =num_DSG, fill=compound)) +
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("Number of DSG") +
  theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x=element_text(size=14),
        axis.text.y = element_blank(), axis.ticks.y = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,0,1,-1), "mm")) +
  coord_flip()+
  scale_fill_manual(values = colorr2)

gg1 <- ggplot_gtable(ggplot_build(g1))
gg2 <- ggplot_gtable(ggplot_build(g2))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))

fout=paste0("dPSI_HTT_eoi_binary_numDSG_",param,"leafcutter_all_with_toxic_exon_0525.png")
png(fout,width=600, height=600)
grid.arrange(gg.mid,gg1,gg2,ncol=3,widths=c(3/9,2/9,5/9))
dev.off()

#======= (2) =========== RAW Dann ===============================================HERE3###################################==================0515
fin2="./HTT_eoi_Dann_leafcutter.txt"  # event of interests eoi
htttb=read.csv(fin2,stringsAsFactors=F,header=F) # already "HTT_eoi.txt" is leafcutter only
head(htttb)
dim(htttb)

comp=sapply( strsplit(  gsub("TST11872_","",sapply(strsplit(htttb$V1,"/"),"[[",11)) , "_master_table"), "[[", 1)
comp
## format conc #
conctemp=sapply(strsplit(comp,"-"),"[[",4)
conctemp=gsub("uM","000nM",conctemp) #uM to nM #conctemp=gsub("uM","000nM",conctemp) #uM to nM
conctemp=sprintf("%05d",as.numeric(gsub("nM","",conctemp))) # add padding zeros 05-15
conctemp

conctemp=paste0(#sapply(strsplit(comp,"-"),"[[",2),"-",
  sapply(strsplit(comp,"-"),"[[",3),"-",
  sapply(strsplit(comp,"-"),"[[",1),"-",
  # conctemp) #,"nM")
  conctemp,"nM")   # add padding zeros 05-15
#conctemp=gsub("dPSI","",conctemp)
conctemp

htttb$V1=conctemp

# clean up #
htttb=htttb[!duplicated(htttb$V1),]
head(htttb)
dim(htttb)
htttb=htttb[order(htttb$V1,decreasing=F),]

# check padj # : only BIO-2136770-NGN2-00300nM has p.adj 0.066
htttb[htttb$V7 > 0.05,]

# merge table: numDSG and dPSI  #
dPSIeoi=as.data.frame(cbind(htttb$V1,htttb$V9))
colnames(dPSIeoi)=c("cellline_treatment","dPSI_eoi")
dPSIeoi$cellline_treatment=gsub(" ","",dPSIeoi$cellline_treatment)
head(dPSIeoi)


numDSG=as.data.frame(cbind(names(y),y))
colnames(numDSG)=c("cellline_treatment","num_DSG")
numDSG$cellline_treatment=gsub(" ","",numDSG$cellline_treatment)
numDSG

tb2=merge(dPSIeoi,numDSG,by.x="cellline_treatment",by.y="cellline_treatment",all=T)
tb2$dPSI_eoi=as.numeric(as.vector(tb2$dPSI_eoi))
tb2$num_DSG=as.numeric(as.vector(tb2$num_DSG))
tb2$compound=paste0("BIO-",sapply(strsplit(tb2$cellline_treatment,"-"),"[[",2))

tb2=tb2[order(tb2$cellline_treatment,decreasing=T),]
tb2



g.mid<-ggplot(tb2,aes(x=1,y=cellline_treatment))+geom_text(aes(label=cellline_treatment))+
  ggtitle("")+
  ylab(NULL)+
  scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
  theme(axis.title=element_blank(),
        panel.grid=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank(),
        panel.background=element_blank(),
        axis.text.x=element_text(color=NA),
        axis.ticks.x=element_line(color=NA),
        plot.margin = unit(c(1,-1,1,-1), "mm"))
      
g1 <- ggplot(data = tb2, aes(x = cellline_treatment, y = dPSI_eoi, fill=compound )) +xlab(NULL)+
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("dPSI_HTT_eoi") +
  theme(axis.title.x = element_blank(), axis.text.x=element_text(size=12), 
        axis.title.y = element_blank(), 
        axis.text.y = element_blank(), 
        axis.ticks.y = element_blank(), 
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,-1,1,0), "mm")) +
  coord_flip() +  #+scale_y_reverse()  # dPSI is negative to begin with.
  scale_fill_manual(values = colorr)


g2 <- ggplot(data = tb2, aes(x = cellline_treatment, y =num_DSG, fill=compound)) +
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("Number of DSG") +
  theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x=element_text(size=14),
        axis.text.y = element_blank(), axis.ticks.y = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,0,1,-1), "mm")) +
  coord_flip()+
  scale_fill_manual(values = colorr2)

gg1 <- ggplot_gtable(ggplot_build(g1))
gg2 <- ggplot_gtable(ggplot_build(g2))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))

# fout=paste0("dPSI_HTT_eoi_binary_numDSG_",param,".png")
# png(fout,width=600, height=600)
# grid.arrange(gg.mid,gg1,gg2,ncol=3,widths=c(3/9,2/9,5/9))
# dev.off()

fout=paste0("dPSI_HTT_eoi_binary_numDSG_",param,"toxic_Dann.png")
png(fout,       width=600, height=600)
grid.arrange(gg.mid,gg1,gg2,ncol=3,widths=c(3/9,2/9,5/9))
dev.off()

#####(3)# rMATS
################################################################################### following not used <<<<<<<<<<<<<<<<<<<<< NOT USED !!!!!!
## dPSI of HTT 'chr4:3212709-3213958|chr4:3212709:3213622' (hg38) ###
# grep 'chr4:3212709-3213958|chr4:3212709:3213622' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi.tst #
# grep  -w HTT /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi_ZG_full_list.csv #
# ==== >>>>>>>>.. grep   'ENSG00000197386.12' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi_ZG_full_list_tmp.csv #
# [filename]chr,strand,geneSymbol,GeneID,Event,Algorithm,FDR,PValue,dPSI,M,PSI_1,PSI_2,Event_info,Annotation_leafcutter,Cutoff_dPSI,Event_type,Junc_coords,PdPSI
#fin2="./res.02.DSG_counts/HTT_eoi.txt"  # event of interests eoi
fin2="./HTT_eoi_ZG_full_list_tmp.csv"  # event of interests eoi, ####### Note by ZG, only came from leafcutter

#fin2="./res.02.DSG_counts/HTT_eoi.txt"  # event of interests eoi
htttb=read.csv(fin2,stringsAsFactors=F,header=F) # already "HTT_eoi.txt" is leafcutter only
head(htttb)
dim(htttb) # 15012

comp=sapply( strsplit(  gsub("TST11872_","", sapply( strsplit(htttb$V1,"/"),"[[",11) ) , "_master_table"), "[[", 1)
comp
## format conc #
conctemp=sapply(strsplit(comp,"-"),"[[",4)
conctemp=gsub("uM","000nM",conctemp) #uM to nM
conctemp=sprintf("%05d",as.numeric(gsub("nM","",conctemp))) #add padding zeros， return back in May-15-2022 ZG
conctemp

conctemp=paste0(#sapply(strsplit(comp,"-"),"[[",2),"-",
  sapply(strsplit(comp,"-"),"[[",3),"-",
  sapply(strsplit(comp,"-"),"[[",1),"-",
  #conctemp) #,"nM")
  conctemp,"nM")  # this line ia match the padding zeros options============
#conctemp=gsub("dPSI","",conctemp)
conctemp

htttb$V1=conctemp
head(htttb)
dim(htttb)

# htttb$V1  = str_replace_all( htttb$V1 , "nMnM", "nM" )   # 2022-04-17
# htttb$V1  = str_replace_all( htttb$V1 , "BIO-", "" )   # 2022-04-17

htttb_rmats = htttb[htttb$V6 == "rmats", ]
head(htttb_rmats)
dim(htttb_rmats)  #1120

head(htttb_rmats,2)
dim(htttb_rmats)
table(htttb_rmats$V5)
# A3SS A5SS  MXE   RI   SE 
# 78  156  175   39  712 

htttb_rmats = htttb_rmats[ which(htttb_rmats$V5 != "A3SS"), ]
htttb_rmats = htttb_rmats[ which(htttb_rmats$V5 != "A5SS"), ]
htttb_rmats = htttb_rmats[ which(htttb_rmats$V5 != "MXE"), ]

#dPSI of HTT 'chr4:3212709-3213958|chr4:3212709:3213622' (hg38) ###
# RI
# [1] "riExonStart_0base:3187650"      "riExonEnd:3189093"              "upstreamES:3187650"             "upstreamEE:3187886"             "downstreamES:3188950"           "downstreamEE:3189093"           "IJC_SAMPLE_1:4,1,1"             "SJC_SAMPLE_1:201,106,138"       "IJC_SAMPLE_2:4,3,0"             "SJC_SAMPLE_2:144,13,30"        
# [11] "IncFormLen:1163"                "SkipFormLen:99"                 "PSI_1_persub:0.002,0.001,0.001" "PSI_2_persub:0.002,0.019,0.0"  
# SE
# [[503]]
# [1] "exonStart_0base:3086938"    "exonEnd:3087022"            "upstreamES:3074680"         "upstreamEE:3075088"         "downstreamES:3099273"       "downstreamEE:3099394"       "IJC_SAMPLE_1:133,110,119"   "SJC_SAMPLE_1:1,0,0"         "IJC_SAMPLE_2:161,93,56"     "SJC_SAMPLE_2:0,0,0"         "IncFormLen:183"             "SkipFormLen:99"            
# [13] "PSI_1_persub:0.986,1.0,1.0" "PSI_2_persub:1.0,1.0,1.0"  

# if(htttb_rmats$V5 == "RI"){
# htttb_rmats$Start_location  = sapply(  strsplit( sapply( strsplit(htttb_rmats$V13, '|', fixed=TRUE) , "[[", 1)  ,  ':', fixed=TRUE) , "[[", 2 )  
# htttb_rmats$End_location    = sapply(  strsplit( sapply( strsplit(htttb_rmats$V13, '|', fixed=TRUE) , "[[", 2)  ,  ':', fixed=TRUE) , "[[", 2 )  
# } else if(htttb_rmats$V5 == "SE") {
# htttb_rmats$Start_location2  = sapply(  strsplit( sapply( strsplit(htttb_rmats$V13, '|', fixed=TRUE) , "[[", 3)  ,  ':', fixed=TRUE) , "[[", 2 )  
# htttb_rmats$End_location2    = sapply(  strsplit( sapply( strsplit(htttb_rmats$V13, '|', fixed=TRUE) , "[[", 4)  ,  ':', fixed=TRUE) , "[[", 2 )  
# }

htttb_rmats$Start_location  = sapply(  strsplit( sapply( strsplit(htttb_rmats$V13, '|', fixed=TRUE) , "[[", 5)  ,  ':', fixed=TRUE) , "[[", 2 )  
htttb_rmats$End_location    = sapply(  strsplit( sapply( strsplit(htttb_rmats$V13, '|', fixed=TRUE) , "[[", 6)  ,  ':', fixed=TRUE) , "[[", 2 )  
htttb_rmats$chr             = "chr4"    #  the vertical line | has to be excaped with \\ or fixted =T htttb_rmats$chr              = sapply(  strsplit( htttb_rmats$V1, ':', fixed=TRUE) , "[[", 2)    #  the vertical line | has to be excaped with \\ or fixted =T
htttb_rmats$FDR             =    htttb_rmats$V7 
htttb_rmats$dPSI            =    htttb_rmats$V9 

head(htttb_rmats)
dim(htttb_rmats)  #751

htttb_rmats = htttb_rmats[ which(htttb_rmats$Start_location > 3212709), ] # dim(htttb_rmats[ which(htttb_rmats$Start_location > 3212709), ])

# #dim(htttb_rmats1)  #751
# htttb_rmats2 = htttb_rmats1[ which(htttb_rmats1$Start_location < 3213958), ] # htttb_rmats = dim(htttb_rmats[ which(htttb_rmats$Start_location < 3213958), ] )
# htttb_rmats2


htttb_rmats

# library(GenomicRanges)
# htttb_rmats_GR = makeGRangesFromDataFrame(htttb_rmats,
#                          keep.extra.columns=T,
#                          ignore.strand=FALSE,
#                          seqinfo=NULL,
#                          seqnames.field= "chr",
#                          start.field="Start_location",
#                          end.field="End_location",
#                          strand.field="V2",
#                          starts.in.df.are.0based=T)
# htttb_rmats_GR
# # x1 <- "chr2:56-125"
# # as(x1, "GRanges")
# HTT_eoi <- GRanges(seqnames=c("chr4"), 
#                    strand=c("+"),
#                    ranges=IRanges(c(3212709,3212709), c(3213958, 3213622) )
#                   )
# 
# htttb_rmats_eoi = subsetByOverlaps(htttb_rmats_GR, HTT_eoi) # found overlaps
# htttb_rmats_eoi_df = as.data.frame(htttb_rmats_eoi)  
# head(htttb_rmats_eoi_df )

# comp=sapply( strsplit(  gsub("TST11872_","",sapply(strsplit(htttb_rmats_eoi_df$V1,"/"),"[[",11)) , "_master_table"), "[[", 1)
# ## format conc #
# conctemp=sapply(strsplit(comp,"-"),"[[",4)
# conctemp=gsub("uM","000nM",conctemp) #uM to nM
# library(withr); conctemp=sprintf("%05d",as.numeric(gsub("nM","",conctemp))) #add padding zeros
# 
# conctemp=paste0(sapply(strsplit(comp,"-"),"[[",2),"-",
#                 sapply(strsplit(comp,"-"),"[[",3),"-",
#                 sapply(strsplit(comp,"-"),"[[",1),"-",
#                 conctemp,"nM")
# conctemp=gsub("dPSI","",conctemp)
# htttb_rmats_eoi_df$V1=conctemp

# clean up #

htttb[, c("V1", "V9", "V13")] 

# https://chartio.com/resources/tutorials/how-to-sort-a-data-frame-by-multiple-columns-in-r/
htttb = htttb[  with(htttb, order(V1, dPSI)),  ]


# FDR   dPSI

htttb_rmats_eoi_df=htttb_rmats_eoi_df[!duplicated(htttb_rmats_eoi_df$V1),]
head(htttb_rmats_eoi_df) #View(htttb_rmats_eoi_df)
htttb_rmats_eoi_df=htttb_rmats_eoi_df[order(htttb_rmats_eoi_df$V1,decreasing=F),]

# check padj # : only BIO-2136770-NGN2-00300nM has p.adj 0.066
htttb_rmats_eoi_df[htttb_rmats_eoi_df$V7 > 0.05,]

# merge table: numDSG and dPSI  #
dPSIeoi=as.data.frame(cbind(htttb_rmats_eoi_df$V1,htttb_rmats_eoi_df$V9))
colnames(dPSIeoi)=c("cellline_treatment","dPSI_eoi")
dPSIeoi$cellline_treatment=gsub(" ","",dPSIeoi$cellline_treatment)

numDSG=as.data.frame(cbind(names(y),y))
colnames(numDSG)=c("cellline_treatment","num_DSG")
numDSG$cellline_treatment=gsub(" ","",numDSG$cellline_treatment)

tb2=merge(dPSIeoi,numDSG,by.x="cellline_treatment",by.y="cellline_treatment",all=T)
tb2$dPSI_eoi = - as.numeric(as.vector(tb2$dPSI_eoi)) # add the -
tb2$num_DSG=as.numeric(as.vector(tb2$num_DSG))
tb2$compound=paste0("BIO-",sapply(strsplit(tb2$cellline_treatment,"-"),"[[",2))

tb2=tb2[order(tb2$cellline_treatment,decreasing=T),]


# plot ##
library(ggplot2)
library(gridExtra)
library(grid)

colorr= c( rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7),rgb(0.6,0.3,0.3),
           rgb(1,0.7,0.7))

colorr2= c( rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7),rgb(0.3,0.3,0.3),
            rgb(0.7,0.7,0.7))


g.mid<-ggplot(tb2,aes(x=1,y=cellline_treatment))+geom_text(aes(label=cellline_treatment))+
  ggtitle("")+
  ylab(NULL)+
  scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
  theme(axis.title=element_blank(),
        panel.grid=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank(),
        panel.background=element_blank(),
        axis.text.x=element_text(color=NA),
        axis.ticks.x=element_line(color=NA),
        plot.margin = unit(c(1,-1,1,-1), "mm"))

g1 <- ggplot(data = tb2, aes(x = cellline_treatment, y = dPSI_eoi, fill=compound )) +xlab(NULL)+
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("dPSI_HTT_eoi") +
  theme(axis.title.x = element_blank(), axis.text.x=element_text(size=12), 
        axis.title.y = element_blank(), 
        axis.text.y = element_blank(), 
        axis.ticks.y = element_blank(), 
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,-1,1,0), "mm")) +
  coord_flip() +  #+scale_y_reverse()  # dPSI is negative to begin with.
  scale_fill_manual(values = colorr)


g2 <- ggplot(data = tb2, aes(x = cellline_treatment, y =num_DSG, fill=compound)) +
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("Number of DSG") +
  theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x=element_text(size=14),
        axis.text.y = element_blank(), axis.ticks.y = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,0,1,-1), "mm")) +
  coord_flip()+
  scale_fill_manual(values = colorr2)

gg1 <- ggplot_gtable(ggplot_build(g1))
gg2 <- ggplot_gtable(ggplot_build(g2))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))

fout=paste0("dPSI_HTT_eoi_binary_numDSG_",param,"rMATS.png")
png(fout,width=600, height=600)
grid.arrange(gg.mid,gg1,gg2,ncol=3,widths=c(3/9,2/9,5/9))
dev.off()

 
######### (4) majiq
################################################################################### Majiq =================================================================================================
## dPSI of HTT 'chr4:3212709-3213958|chr4:3212709:3213622' (hg38) ###
# grep 'chr4:3212709-3213958|chr4:3212709:3213622' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi.tst #
# grep  -w HTT /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi_ZG_full_list.csv #
# grep   'ENSG00000197386.12' /home/zgao1/NGS_projects/TST11872/dnanexus/20220204181515_zhen.gao/Result/Analysis_2_2022_02_try_run/*/*.csv > HTT_eoi_ZG_full_list_tmp.csv # ===================<<<<<<<<<<<<<<<<<<<<
# [filename]chr,strand,geneSymbol,GeneID,Event,Algorithm,FDR,PValue,dPSI,M,PSI_1,PSI_2,Event_info,Annotation_leafcutter,Cutoff_dPSI,Event_type,Junc_coords,PdPSI
#fin2="./res.02.DSG_counts/HTT_eoi.txt"  # event of interests eoi
fin2="./HTT_eoi_ZG_full_list_tmp.csv"  # event of interests eoi, ####### Note by ZG, only came from leafcutter

#fin2="./res.02.DSG_counts/HTT_eoi.txt"  # event of interests eoi
htttb=read.csv(fin2,stringsAsFactors=F,header=F) # already "HTT_eoi.txt" is leafcutter only
head(htttb)
dim(htttb)

htttb_majiq = htttb[htttb$V6 == "majiq", ] # majiq

head(htttb_majiq)
head(htttb_majiq, 100)
dim(htttb_majiq)


comp=sapply( strsplit(  gsub("TST11872_","",sapply(strsplit(htttb_majiq$V1,"/"),"[[",11)) , "_master_table"), "[[", 1)

comp
## format conc #
conctemp=sapply(strsplit(comp,"-"),"[[",4) # 2022-04-17 conctemp=sapply(strsplit(comp,"-"),"[[",4)
conctemp=gsub("uM","000nM",conctemp) #uM to nM
#library(withr); 
conctemp=sprintf("%05d",as.numeric(gsub("nM","",conctemp))) #add padding zeros

# conctemp=paste0(sapply(strsplit(comp,"-"),"[[",2),"-",
#                 sapply(strsplit(comp,"-"),"[[",3),"-",
#                 sapply(strsplit(comp,"-"),"[[",1),"-",
#                 conctemp,"nM") 
conctemp=paste0(sapply(strsplit(comp,"-"),"[[",3),"-",
                sapply(strsplit(comp,"-"),"[[",1),"-",
                #conctemp) # double nM  
                conctemp,"nM")  # this line ia match the padding zeros options============
#conctemp=gsub("dPSI","",conctemp)
conctemp

htttb_majiq$V1=conctemp

head(htttb_majiq)
dim(htttb_majiq)

#################
# chr4:3212709-3213958 1249
# chr4:3212709-3213622 913

htttb_majiq$Junction_start_postion = sapply( strsplit(htttb_majiq$V17,"-"), "[[", 1)
htttb_majiq$Junction_stop_postion  = sapply( strsplit(htttb_majiq$V17,"-"), "[[", 2)

#####
htttb_majiq = htttb_majiq[  htttb_majiq$Junction_start_postion == "3212709", ] # [1] 1038   20
htttb_majiq = htttb_majiq[  as.numeric(htttb_majiq$Junction_start_postion ) < "3213959", ] # [1] 1038   20
dim(htttb_majiq)

typeof(htttb_majiq$Junction_start_postion) 
length(htttb_majiq$Junction_stop_postion) 

#htttb_majiq$intron_inclusion = htttb_majiq[ as.numeric(htttb_majiq$Junction_stop_postion) < 3213958 ,    ] # [1] 418  20
htttb_majiq$intron_inclusion = as.numeric(htttb_majiq$Junction_stop_postion) < 3213958  # [1] 418  20

dim(htttb_majiq)
head(htttb_majiq)

library(dplyr)
htttb_majiq %>% group_by( V1)                  %>% summarise(intron_retension_count = n())
intron_inclusion_ratio = htttb_majiq %>% group_by( V1,intron_inclusion) %>% summarise(intron_retension_count = n()) %>% arrange( V1, intron_inclusion ) 

intron_inclusion_ratio_False = intron_inclusion_ratio[ intron_inclusion_ratio$intron_inclusion == F,  ]

names(intron_inclusion_ratio_False)[names(intron_inclusion_ratio_False) == 'intron_retension_count'] <- "span_count"

intron_inclusion_ratio_True  = intron_inclusion_ratio[ intron_inclusion_ratio$intron_inclusion == T,  ]
#names(intron_inclusion_ratio_True)[names(intron_inclusion_ratio_True) == 'intron_retension_count'] <- "intron_inclusion_count"

intension_ratio = merge(intron_inclusion_ratio_True , intron_inclusion_ratio_False, by= "V1",all=T)
intension_ratio$rention_ratio = intension_ratio$intron_retension_count / ( intension_ratio$intron_retension_count  + intension_ratio$span_count)
intension_ratio


# <- with(df, ifelse(b > 5, b/c, NA))

#################
#################


# clean up #
htttb_majiq$dPSI_w =  - abs(htttb_majiq$V9)  # critall changes , keep the line wiht larget V9 only 2022-04-07
htttb_majiq        =  htttb_majiq[order( htttb_majiq$dPSI_w ,decreasing=F) , ] # critall changes , keep the line wiht larget V9 only 2022-04-07

htttb_majiq=htttb_majiq[!duplicated(htttb_majiq$V1),]
head(htttb_majiq) #View(htttb_majiq)
dim(htttb_majiq) #View(htttb_majiq)
htttb_majiq=htttb_majiq[order(htttb_majiq$V1,decreasing=F),]
htttb_majiq

# check padj # : only BIO-2136770-NGN2-00300nM has p.adj 0.066
#htttb_majiq[htttb_majiq$V7 > 0.05,]

# merge table: numDSG and dPSI  #
dPSIeoi=as.data.frame(cbind(htttb_majiq$V1,htttb_majiq$dPSI_w))
colnames(dPSIeoi)=c("cellline_treatment","dPSI_eoi")
dPSIeoi$cellline_treatment=gsub(" ","",dPSIeoi$cellline_treatment)

numDSG=as.data.frame(cbind(names(y),y))
colnames(numDSG)=c("cellline_treatment","num_DSG")
numDSG$cellline_treatment=gsub(" ","",numDSG$cellline_treatment)
numDSG
# htttb$V1  = str_replace_all( htttb$V1 , "nMnM", "nM" )   # 2022-04-17
# htttb$V1  = str_replace_all( htttb$V1 , "BIO-", "" )   # 2022-04-17
# dPSIeoi$cellline_treatment  = str_replace_all( dPSIeoi$cellline_treatment , "BIO-", "" )   # 2022-04-17
dPSIeoi 

tb2=merge(dPSIeoi,numDSG,by.x="cellline_treatment",by.y="cellline_treatment",all=T)
tb2$dPSI_eoi= as.numeric(as.vector(tb2$dPSI_eoi)) # add the  "-" remove the _ 04-07
tb2$num_DSG=as.numeric(as.vector(tb2$num_DSG))
tb2$compound=paste0("BIO-",sapply(strsplit(tb2$cellline_treatment,"-"),"[[",2))

tb2=tb2[order(tb2$cellline_treatment,decreasing=T),]
tb2


g.mid<-ggplot(tb2,aes(x=1,y=cellline_treatment))+geom_text(aes(label=cellline_treatment))+
  ggtitle("")+
  ylab(NULL)+
  scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065))+
  theme(axis.title=element_blank(),
        panel.grid=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank(),
        panel.background=element_blank(),
        axis.text.x=element_text(color=NA),
        axis.ticks.x=element_line(color=NA),
        plot.margin = unit(c(1,-1,1,-1), "mm"))

g1 <- ggplot(data = tb2, aes(x = cellline_treatment, y = dPSI_eoi, fill=compound )) +xlab(NULL)+
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("dPSI_HTT_eoi") +
  theme(axis.title.x = element_blank(), axis.text.x=element_text(size=12), 
        axis.title.y = element_blank(), 
        axis.text.y = element_blank(), 
        axis.ticks.y = element_blank(), 
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,-1,1,0), "mm")) +
  coord_flip() +  #+scale_y_reverse()  # dPSI is negative to begin with.
  scale_fill_manual(values = colorr)


g2 <- ggplot(data = tb2, aes(x = cellline_treatment, y =num_DSG, fill=compound)) +
  geom_bar(stat = "identity", show.legend = FALSE) + ggtitle("Number of DSG") +
  theme(axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x=element_text(size=14),
        axis.text.y = element_blank(), axis.ticks.y = element_blank(),
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,0,1,-1), "mm")) +
  coord_flip()+
  scale_fill_manual(values = colorr2)

gg1 <- ggplot_gtable(ggplot_build(g1))
gg2 <- ggplot_gtable(ggplot_build(g2))
gg.mid <- ggplot_gtable(ggplot_build(g.mid))

fout=paste0("dPSI_HTT_eoi_binary_numDSG_",param,"majiq_all_with_toxic_exon.png")
png(fout,width=600, height=600)
grid.arrange(gg.mid,gg1,gg2,ncol=3,widths=c(3/9,2/9,5/9))
dev.off()

# run.05.DSG_counts_overlap3vs3.R
#setwd("/camhpc/ngs/projects/TST12086/dnanexus/20230305034844_Zhen.Gao/code_downstream/")
R.Version()
#rm(list = ls()) #install.packages("ggVennDiagram") # 15min
#library("ggVennDiagram")
library(ggplot2)
require("UpSetR") # movies <- read.csv(system.file("extdata", "movies.csv", package = "UpSetR"), header = T, sep = ";")
library(dplyr)

getwd()
#out_dir = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/2023-09-24-4vs4-3vs3-difference/DSG_Result_difference_09-25/"
out_dir = "/mnt/depts/dept04/compbio/projects/TST12188/dnanexus/20230921054434_Zhen.Gao_GMfibro_3vs3/DSG_Result/splicing_offtargets_3vs3_09-30_abs_dPSI_plotting/3x_dose/"
dir.create(out_dir, recursive = T)               #dir.create(din, recursive = T)
setwd(out_dir )


######
GM_4vs4_dPSI_bi =  read.csv("/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230824054737_Zhen.Gao_GM_noSMN1/DSG_Result/splicing_offtargets_rerun_4vs4_09-25/binary_dPSIrm0.3_dPSIlc0.25_padj0.05_EdPSI0.3_PdPSI0.9_M50.csv", stringsAsFactors=F)   
row.names(GM_4vs4_dPSI_bi ) # row.names(dPSI_bi ) =  make.names(dPSI_bi$genesymbol, unique=TRUE) # dPSI_bi $genesymbol = NULL
row.names(GM_4vs4_dPSI_bi )  = GM_4vs4_dPSI_bi $X
GM_4vs4_dPSI_bi$X = NULL

######
SH_4vs4_dPSI_bi =  read.csv("/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230823221304_Zhen.Gao_ShSy5Y_GRCh38/DSG_Result/splicing_offtargets_rerun_4vs4_09-25/binary_dPSIrm0.3_dPSIlc0.25_padj0.05_EdPSI0.3_PdPSI0.9_M50.csv", stringsAsFactors=F)   
row.names(SH_4vs4_dPSI_bi  ) # row.names(SH_4vs4_dPSI_bi  ) =  make.names(SH_4vs4_dPSI_bi $genesymbol, unique=TRUE) # SH_4vs4_dPSI_bi  $genesymbol = NULL
row.names(SH_4vs4_dPSI_bi  )  = SH_4vs4_dPSI_bi $X
SH_4vs4_dPSI_bi$X = NULL
#####


######
GM_3vs3_dPSI_bi =  read.csv("/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230921054434_Zhen.Gao_GMfibro_3vs3/DSG_Result/splicing_offtargets_3vs3_09-25//binary_dPSIrm0.3_dPSIlc0.25_padj0.05_EdPSI0.3_PdPSI0.9_M50.csv", stringsAsFactors=F)   
row.names(GM_3vs3_dPSI_bi  ) # row.names(GM_3vs3_dPSI_bi  ) =  make.names(GM_3vs3_dPSI_bi $genesymbol, unique=TRUE) # GM_3vs3_dPSI_bi  $genesymbol = NULL
row.names(GM_3vs3_dPSI_bi  )  = GM_3vs3_dPSI_bi $X
GM_3vs3_dPSI_bi$X = NULL

######
SH_3vs3_dPSI_bi =  read.csv("/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230921051846_Zhen.Gao_ShSy5Y_3vs3/DSG_Result/splicing_offtargets_3vs3_09-25/binary_dPSIrm0.3_dPSIlc0.25_padj0.05_EdPSI0.3_PdPSI0.9_M50.csv", stringsAsFactors=F)   
row.names(SH_3vs3_dPSI_bi  ) # row.names(SH_3vs3_dPSI_bi  ) =  make.names(SH_3vs3_dPSI_bi $genesymbol, unique=TRUE) # SH_3vs3_dPSI_bi  $genesymbol = NULL
row.names(SH_3vs3_dPSI_bi  )  = SH_3vs3_dPSI_bi $X
SH_3vs3_dPSI_bi$X = NULL
#####


dim(GM_4vs4_dPSI_bi)
dim(SH_4vs4_dPSI_bi)
dim(GM_3vs3_dPSI_bi)
dim(SH_3vs3_dPSI_bi)
GM_4vs4_dPSI_bi[1:6,1:6]
SH_4vs4_dPSI_bi[1:6,1:6]
GM_3vs3_dPSI_bi[1:6,1:6]
SH_3vs3_dPSI_bi[1:6,1:6]

colnames(GM_4vs4_dPSI_bi) =  paste0( "4vs4_", colnames(GM_4vs4_dPSI_bi) )
colnames(SH_4vs4_dPSI_bi) =  paste0( "4vs4_", colnames(SH_4vs4_dPSI_bi) )
colnames(GM_3vs3_dPSI_bi) =  paste0( "3vs3_", colnames(GM_3vs3_dPSI_bi) )
colnames(SH_3vs3_dPSI_bi) =  paste0( "3vs3_", colnames(SH_3vs3_dPSI_bi) )


GM_4vs4_3vs3_dPSI_bi = merge(GM_4vs4_dPSI_bi, GM_3vs3_dPSI_bi, by = 0, all = T)
dim(GM_4vs4_3vs3_dPSI_bi)
dPSI_bi = GM_4vs4_3vs3_dPSI_bi      # 4vs4_GM_BIO_1949634_10x

SH_4vs4_3vs3_dPSI_bi = merge(SH_4vs4_dPSI_bi, SH_3vs3_dPSI_bi, by = 0, all = T)
dim(SH_4vs4_3vs3_dPSI_bi)
dPSI_bi = SH_4vs4_3vs3_dPSI_bi

head(dPSI_bi)
row.names(dPSI_bi) = dPSI_bi$Row.names
dPSI_bi$Row.names = NULL

dPSI_bi[is.na(dPSI_bi)] <- 0 

head(dPSI_bi)
dim(dPSI_bi)
colnames(dPSI_bi)


# "GM_BIO_2178782" "GM_BIO_2186827" "GM_BIO_2196772" "GM_BIO_2196895" "GM_BIO_2197306" "GM_BIO_2199562" "GM_BIO_2201042" "GM_BIO_2204984" "GM_BIO_2206678" "GM_BIO_2207180" ==== #############
dPSI_bi_working = dPSI_bi[ ,  grepl( "^...._.._..._1949634_10x"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep 4vs4_GM_BIO_1949634_10x 3vs3_GM_BIO_1949634_10x_
dPSI_bi_working = dPSI_bi[ ,  grepl( "^...._.._..._1949634_3x"     , colnames(dPSI_bi)  ) ]  # grepl NOT grep 4vs4_GM_BIO_1949634_3x 3vs3_GM_BIO_1949634_3x_


dPSI_bi_working[1:6, ] # only 2 column

# 
#  dPSI_bi_working = dPSI_bi[ ,  grepl( "^GM_2178782"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep
#   dPSI_bi_working = dPSI_bi[ ,  grepl( "^GM_2186827"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep
#   dPSI_bi_working = dPSI_bi[ ,  grepl( "^GM_2196772"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep
#   dPSI_bi_working = dPSI_bi[ ,  grepl( "^GM_2196895"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep
#   dPSI_bi_working = dPSI_bi[ ,  grepl( "^GM_2197306"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep
# # # 
#   dPSI_bi_working = dPSI_bi[ ,  grepl( "^GM_2199562"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep
#   dPSI_bi_working = dPSI_bi[ ,  grepl( "^GM_2201042"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep
#   dPSI_bi_working = dPSI_bi[ ,  grepl( "^GM_2204984"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep
#   dPSI_bi_working = dPSI_bi[ ,  grepl( "^GM_2206678"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep
#   dPSI_bi_working = dPSI_bi[ ,  grepl( "^GM_2207180"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep

###### 
dPSI_bi_working 
dPSI_bi_working = dPSI_bi_working[!(rowSums(dPSI_bi_working) == 0), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na
head(dPSI_bi_working)
dPSI_bi_working[1:2,]
dim(dPSI_bi_working)

colnames_set = colnames(dPSI_bi_working) # 15 types
colnames_set

getwd()
# fout = paste0("GM_5_UpSet_Ris_10x", ".png")
# fout = paste0("GM_5_UpSet_Ris_3x", ".png")

fout = paste0("SH_5_UpSet_Ris_10x", ".png")
#fout = paste0("SH_5_UpSet_Ris_3x", ".png")

# fout = paste0("5_UpSet_Ris", ".png")
 # fout = paste0("6_UpSet_BIO_2178782_vs_DMSO_and_Ris", ".png")
 # fout = paste0("7_UpSet_BIO_2186827_vs_DMSO_and_Ris", ".png")
 # fout = paste0("8_UpSet_BIO_2196772_vs_DMSO_and_Ris", ".png")
 # fout = paste0("9_UpSet_BIO_2196895_vs_DMSO_and_Ris", ".png")
 # fout = paste0("10_UpSet_BIO_2197306_vs_DMSO_and_Ris", ".png")
 # fout = paste0("11_UpSet_BIO_2199562_vs_DMSO_and_Ris", ".png")
 # fout = paste0("12_UpSet_BIO_2201042_vs_DMSO_and_Ris", ".png")
 # fout = paste0("13_UpSet_BIO_2204984_vs_DMSO_and_Ris", ".png")
 # fout = paste0("14_UpSet_BIO_2206678_vs_DMSO_and_Ris", ".png")
 # fout = paste0("15_UpSet_BIO_2207180_vs_DMSO_and_Ris", ".png")

png(fout, height = 1000, width = 680+ncol(dPSI_bi_working)*50)            #png(fout,height = 500, width = length(y)*50)
upset(dPSI_bi_working , sets = colnames_set,  mainbar.y.label = "Differential Splicing Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))    # https://cran.r-project.org/web/packages/UpSetR/vignettes/basic.usage.html
dev.off()


### "SH_1949634" "SH_2178782" "SH_2196772" "SH_2196895" "SH_2197306" "SH_2199562" "SH_2204984" "SH_2207180"
dPSI_bi_working = dPSI_bi[ ,  grepl( "^SH_1949634"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep

 dPSI_bi_working = dPSI_bi[ ,  grepl( "^SH_2178782"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep  # dPSI_bi_working = dPSI_bi[ ,  grepl( "^SH_2186827"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep
 dPSI_bi_working = dPSI_bi[ ,  grepl( "^SH_2196772"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep
 dPSI_bi_working = dPSI_bi[ ,  grepl( "^SH_2196895"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep
 dPSI_bi_working = dPSI_bi[ ,  grepl( "^SH_2197306"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep

 dPSI_bi_working = dPSI_bi[ ,  grepl( "^SH_2199562"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep  # dPSI_bi_working = dPSI_bi[ ,  grepl( "^SH_2201042"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep
 dPSI_bi_working = dPSI_bi[ ,  grepl( "^SH_2204984"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep  # dPSI_bi_working = dPSI_bi[ ,  grepl( "^SH_2206678"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep
 dPSI_bi_working = dPSI_bi[ ,  grepl( "^SH_2207180"    , colnames(dPSI_bi)  ) ]  # grepl NOT grep

###### 
dPSI_bi_working 
dPSI_bi_working = dPSI_bi_working[!(rowSums(dPSI_bi_working) == 0), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na
head(dPSI_bi_working)
dPSI_bi_working[1:2,]
dim(dPSI_bi_working)

colnames_set = colnames(dPSI_bi_working) # 15 types
colnames_set

 fout = paste0("SH_5_UpSet_Ris", ".png")
 fout = paste0("6_UpSet_BIO_2178782_vs_DMSO_and_Ris", ".png") #  fout = paste0("7_UpSet_BIO_2186827_vs_DMSO_and_Ris", ".png")
 fout = paste0("8_UpSet_BIO_2196772_vs_DMSO_and_Ris", ".png") 
 fout = paste0("9_UpSet_BIO_2196895_vs_DMSO_and_Ris", ".png")
 fout = paste0("10_UpSet_BIO_2197306_vs_DMSO_and_Ris", ".png")
 fout = paste0("11_UpSet_BIO_2199562_vs_DMSO_and_Ris", ".png") #  fout = paste0("12_UpSet_BIO_2201042_vs_DMSO_and_Ris", ".png")
 fout = paste0("13_UpSet_BIO_2204984_vs_DMSO_and_Ris", ".png") #  fout = paste0("14_UpSet_BIO_2206678_vs_DMSO_and_Ris", ".png")
 fout = paste0("15_UpSet_BIO_207180_vs_DMSO_and_Ris", ".png")

 getwd()
png(fout, height = 1000, width = 680+ncol(dPSI_bi_working)*50)            #png(fout,height = 500, width = length(y)*50)
upset(dPSI_bi_working , sets = colnames_set,  mainbar.y.label = "Differential Splicing Gene Overlaps", point.size = 3.5, text.scale = c(2.5, 2, 1.5, 1.5, 2, 2))    # https://cran.r-project.org/web/packages/UpSetR/vignettes/basic.usage.html
dev.off()

# run.06.DSG_counts_minmaxtable_coorelationlot1_venn.R
#setwd("/camhpc/ngs/projects/TST12086/dnanexus/20230305034844_Zhen.Gao/code_downstream/")
R.Version()
rm(list = ls()) #install.packages("ggVennDiagram") # 15min#
library("ggVennDiagram")
library(ggplot2)
#require("UpSetR") # movies <- read.csv(system.file("extdata", "movies.csv", package = "UpSetR"), header = T, sep = ";")
library(dplyr)
library(ggrepel) # https://cran.r-project.org/web/packages/ggrepel/vignettes/ggrepel.html
set.seed(42)

din     = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230921054434_Zhen.Gao_GMfibro_3vs3/DSG_Result/From_DNANenxs_Master_3vs3_09-25/"
#out_dir = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230921054434_Zhen.Gao_GMfibro_3vs3/DSG_Result/splicing_offtargets_3vs3_09-30_abs_dPSI_plotting/10x_dose/dPSI_0.25/" #splicing_offtargets_3vs3_09-29_abs_dPSI/" #_09-28_
#out_dir = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230921054434_Zhen.Gao_GMfibro_3vs3/DSG_Result/splicing_offtargets_3vs3_09-30_abs_dPSI_plotting/3x_dose/dPSI_0.25/" 
out_dir = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230921054434_Zhen.Gao_GMfibro_3vs3/DSG_Result/splicing_offtargets_3vs3_09-30_abs_dPSI_plotting/venn/"

# din     = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230921051846_Zhen.Gao_ShSy5Y_3vs3/DSG_Result/From_DNANenxs_Master_3vs3_09-25/"
# out_dir = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230921051846_Zhen.Gao_ShSy5Y_3vs3/DSG_Result/splicing_offtargets_3vs3_09-29_abs_dPSI/"

# din     = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230824054737_Zhen.Gao_GM_noSMN1/DSG_Result/From_DNANenxs_Master_rerun_4vs4_09-25/"
# out_dir = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230824054737_Zhen.Gao_GM_noSMN1/DSG_Result/splicing_offtargets_rerun_4vs4_09-29_abs_dPSI/"
# 
# din     = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230823221304_Zhen.Gao_ShSy5Y_GRCh38/DSG_Result/From_DNANenxs_Master_rerun_4vs4_09-25/"
# out_dir = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230823221304_Zhen.Gao_ShSy5Y_GRCh38/DSG_Result/splicing_offtargets_rerun_4vs4_09-29_abs_dPSI/"

dir.create(out_dir, recursive = T)
setwd(out_dir)

pformat = "/edgehpc/dept/compbio/users/dhuh/software/R/R_modified/pformat_whitebG.r"
jet     = colorRampPalette(c("blue","green","yellow","orange","darkred")) # make gradient of colors #brightjet = colorRampPalette(c("#007FFF", "cyan","#7FFF7F", "yellow", "#FF7F00","#FF3535")) # make gradient of colors

######################
minpdj_maxdPSI_FDR_qual = function(tbtemp, colnn){         ##==09-28-all abs() ZG

  gn = unique(tbtemp$geneSymbol)
  
  if( sum(gn  == ".") > 0 ){ gn = gn[ !(gn  == ".") ] }  # remove un-annotated genes
  
  minmaxcum = as.data.frame( matrix(0, nrow = length(gn) , ncol = 4 ) )      #  3 add algorithm =======> ZG 2023-10-05
  colnames(minmaxcum) = colnn 
  minmaxcum$genesymbol = gn
  minmaxcum
  
  for(i in 1:length(gn)){
    #       i
    gntemp = gn[i]
    #gntemp = "HTT"
    #gntemp = "SMN1"
    #gntemp = "SMN2"
    
    tbtemp2 = tbtemp[ which(tbtemp$geneSymbol ==  gntemp) , ]
    
    if(nrow(tbtemp2) ==  1){          # only one row of goi, no "min" needed
      
      dPSItemp        = abs( tbtemp2$dPSI )
      algorithem_used = tbtemp2$Algorithm             # for majiq, keep PdPSI. =======> ZG 2023-10-05
      if(tbtemp2$Algorithm ==  "majiq_v2"){                                                #  from "majiq" 
        padj_PdPSI = 1- tbtemp2$PdPSI                               # for majiq, keep PdPSI. =======> ZG 2023-10-05
      }else{
        padj_PdPSI = tbtemp2$FDR      # for rmats and leafcutter keep padj
      }
      
    }else{                            # if there are more than two rows of goi (gene of interest) , find either "min" padj or max PdPSI 
      
      rn_minpadj = which( tbtemp2$FDR == min( tbtemp2$FDR, na.rm = T) ) 
      tbtemp3 = tbtemp2[ rn_minpadj, ]
      
      if(nrow(tbtemp3) ==  0){                # if there's no min, it's all majiq, with multiple lines
        rn_maxpdpsi = which(tbtemp2$PdPSI  == max(tbtemp2$PdPSI, na.rm = T)  ) # ..get the max(PdPSI)
        tbtemp3 = tbtemp2[rn_maxpdpsi,]
        
        if(nrow(tbtemp3) ==  1){       # if there's only one max PdPSI
          dPSItemp =  abs( tbtemp3$dPSI )
          padj_PdPSI = 1- tbtemp3$PdPSI                           # for majiq, keep PdPSI. =======> ZG 2023-10-05
          algorithem_used = tbtemp3$Algorithm     ####=======>>
        }else{                         #if there's more than on max dPSI
          dPSItemp = max( abs( tbtemp3$dPSI) )  # pick the max(dPSI)
          padj_PdPSI = 1- tbtemp3$PdPSI[1]
          algorithem_used = tbtemp3$Algorithm[1]  ####=======>>
        }
        
      }else if(nrow(tbtemp3) ==  1){  # if there's only one min (either rmats or leafcutter, no majiq)
        dPSItemp   = abs( tbtemp3$dPSI )
        padj_PdPSI = tbtemp3$FDR
        algorithem_used = tbtemp3$Algorithm     ####=======>>
      }else{                          # more than 1 min, pick max(dPSI). both are either rmats or leafcutter. 
        dPSItemp = max( abs( tbtemp3$dPSI) )
        padj_PdPSI = tbtemp3$FDR[1]
        algorithem_used = tbtemp3$Algorithm[1]     ####=======>>
      }
    }
    minmaxcum[i, 2] = padj_PdPSI
    minmaxcum[i, 3] = dPSItemp
    minmaxcum[i, 4] = algorithem_used
    
  }
  
  print(minmaxcum[i,])
  return(minmaxcum)
}

coi_ar = dir(din, pattern = "dPSI0.1")    # all compounds, dPSI>0.1 #coi_ar = dir(din)
coi_short_names = gsub( "_dPSI0.1_padj0.05_M50_EdPSI0.1_PdPSI0.9.csv" ,  "" , coi_ar )
coi_short_names = gsub( "filteredevents_" ,  "" , coi_short_names )
coi_short_names

thr_dPSI_rm = 0.3; 
thr_dPSI_lc = 0.25; 
thr_dPSI_mj = 0.3;

param = paste0("dPSIrm",thr_dPSI_rm,"_dPSIlc",thr_dPSI_lc,"_padj0.05_EdPSI",thr_dPSI_mj,"_PdPSI0.9_M50") # for fout

# colnames(dPSI_bi) 
# colnames(dPSI_bi) = gsub("dPSI_" , "", colnames(dPSI_bi) ) # colnames(dPSI_bi) = gsub("dPSI_","", gsub("_max.abs.dPSI..","",colnames(dPSI_bi)))
# colnames(dPSI_bi) = gsub("BIO_" , "", colnames(dPSI_bi) )  # y %>% select(sub('_ln$', '', filter_vector))

### minpadj per gene ####################
minmaxall = c()

for(i in 1:length(coi_ar)){
  #    i = 1
  coi = coi_ar[i] # compound of interest
  #coi = "filteredevents_SH_BIO_2196772_3x_vs_SH_DMSO_dPSI0.1_padj0.05_M50_EdPSI0.1_PdPSI0.9.csv"    
  #coi = "filteredevents_SH_BIO_2196772_10x_vs_SH_DMSO_dPSI0.1_padj0.05_M50_EdPSI0.1_PdPSI0.9.csv"    
  # fin = dir(din)
  
  fin = dir(din , pattern = coi)
  tbtemp = read.table(paste0(din,fin) ,stringsAsFactors = F,sep = ",",header = 1)
  head(tbtemp)
  dim(tbtemp)
  
  ## apply thresholding per algorithm ##
  rm_t = tbtemp[ which( tbtemp$Algorithm ==  "rmats_turbo" & abs(tbtemp$dPSI)       >=  thr_dPSI_rm) , ] #   rm_t = tbtemp[ which( tbtemp$Algorithm ==  "rmats"      & abs(tbtemp$dPSI)       >=  thr_dPSI_rm) , ] 
  lc_t = tbtemp[ which( tbtemp$Algorithm ==  "leafcutter"  & abs(tbtemp$dPSI)       >=  thr_dPSI_lc) , ]
  mj_t = tbtemp[ which( tbtemp$Algorithm ==  "majiq_v2"    &     tbtemp$Cutoff_dPSI >=  thr_dPSI_mj) , ] #   mj_t = tbtemp[ which( tbtemp$Algorithm ==  "majiq"      &     tbtemp$Cutoff_dPSI >=  thr_dPSI_mj) , ]
  
  head(rm_t)
  head(lc_t)
  head(mj_t) #   tail(mj_t)
  # dim(rm_t)
  # dim(lc_t)
  # dim(mj_t)
  
  tbtemp_t = rbind(rm_t, lc_t, mj_t)
  tbtemp_t = tbtemp_t[!(tbtemp_t$geneSymbol ==  ".") ,] #clean up some names
  # head(tbtemp_t)
  #  dim(tbtemp_t)
  #  goi = "HTT"; #   goi = "ATG16L1"; 
  #  tbtemp_t[which(tbtemp_t$geneSymbol ==  goi) ,]
  
  ## extract min-pval-max-dPSI ##  #minmaxtemp = minpdj_maxdPSI( tbtemp = tbtemp_t, colnn = c("genesymbol",paste0("minpadj_maxPdPSI_",coi) , paste0("dPSI_",coi) ) )  ##  == == == == == == == == == == == == == == == == == == Call the function
  #minmaxtemp = minpdj_maxdPSI_FDR_qual( tbtemp = tbtemp_t, colnn = c("genesymbol",paste0("minpadj_maxPdPSI_",coi_short_names[i]) , paste0("dPSI_",coi_short_names[i]), paste0("Algorithm_",coi_short_names[i]) ) )  ##  == Call the function
  minmaxtemp = minpdj_maxdPSI_FDR_qual( tbtemp = tbtemp_t, colnn = c("genesymbol",paste0("FDR_equal_",coi_short_names[i]) , paste0("dPSI_",coi_short_names[i]), paste0("Algorithm_",coi_short_names[i]) ) )  ##  == Call the function
  head(minmaxtemp)
  dim(minmaxtemp)
  
  ## optional: clean up colnames ##
  colnames(minmaxtemp) = gsub("filteredevents_","", sapply( strsplit( colnames(minmaxtemp) , paste0("_dPSI") ) , "[[", 1) ) #   gsub("filteredevents_TST11742_","", sapply( strsplit( colnames(minmaxtemp) , paste0("_dPSI") ) , "[[", 1) )
  
  ## merge ##
  if(i ==  1){ minmaxall = minmaxtemp
  } else{  minmaxall = merge(minmaxall, minmaxtemp, by.x = "genesymbol", by.y = "genesymbol" , all = T) }
}

head(minmaxall) 
 dim(minmaxall) # [1] [1] 2331   85 for GM GM09677c SMA fibroblasts  cells  *** 2195   61 for SySy5Y cells                                  [2] 162  60 GM cells [1] 249   84 GM cells 

minmaxall_raw = minmaxall
rownames(minmaxall) = make.names(minmaxall$genesymbol , unique = T)            # should take care     
minmaxall$genesymbol = NULL 

colnames(minmaxall) 
row.names(minmaxall) 
dim(minmaxall)
minmaxall[1:10, 1:10] # minmaxall_raw[1:10, 1:10] 

any(row.names(minmaxall) %in% "NA")
any(row.names(minmaxall) %in% "NA.")
any(row.names(minmaxall) %in% "NA..")
minmaxall = minmaxall[ !(row.names(minmaxall) %in% c("NA", "NA.", "NA..")), ]

for(i in 1:ncol(minmaxall) ){
  my_vec = minmaxall[, i]
  print(i)
  print(any( is.infinite(my_vec)) )  #   any( is.infinite(my_vec))          68
}

dim(minmaxall) #  327 126 GM cells
head(minmaxall) 
colnames(minmaxall) 

sample_types =  unique( sapply(strsplit( colnames(minmaxall),  split="_\\d{1,2}x_vs_") , `[`, 1) )  #numDSG_DMSO$cellline_dose = sapply(strsplit(numDSG_DMSO$cellline_DMSO, "_vs_") , `[`, 1) 
sample_types

head( minmaxall[ ,  grepl( "vs_.._DMSO"    , colnames(minmaxall)  ) ]  )# grepl NOT grep  #minmaxall_Ris  = minmaxall[ ,  grepl( "vs_.._1949634" , colnames(minmaxall)  ) ]  # grepl NOT grep


############################ 10x experiments + 3x compounds experiments ############################ 10x experiments + 3x Risdiplam experiments 
getwd()

# ========> Compound 1          2178782
dPSI_working = BIO_2178782_risdiplam_columns =  minmaxall[ , grep( "dPSI_.*2178782_.*x_vs_GM_DMSO|dPSI_.*1949634_.*x_vs_GM_DMSO"    , colnames(minmaxall)  ) ] 
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

dim(dPSI_working)
head(dPSI_working)

## ========> ======= venn plot ====##                                  https://finnstats.com/2022/05/09/how-to-create-a-beautiful-venn-diagram-in-r/
x <- list(
    Risdiplam_10x_vs_GM_DMSO    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_1949634_10x_vs_GM_DMSO"  , drop = F ] ) ,
    Risdiplam_3x_vs_GM_DMSO     = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_1949634_3x_vs_GM_DMSO"   , drop = F ] ) ,
    BIO_2178782_10x_vs_GM_DMS   = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2178782_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_2178782_10x_vs_GM_DMSO"  , drop = F ] ) ,
    BIO_2178782_3x_vs_GM_DMS    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2178782_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_2178782_3x_vs_GM_DMSO"   , drop = F ] ) ) 
x

fout = paste0("1_BIO_2178782__DMSO_OVERLAP_Risdiplam_DMSO", ".csv")
write.csv(dPSI_working,file = fout,quote = F, row.names = T)

png("1_BIO_2178782_vs_Risdiplam.vnn.png", width = 1500, height = 1100) # png("dPSI_working.vnn.png")
ggVennDiagram(x, label_color = "firebrick" , label_size = 8, set_size = 4, edge_size = 3) + 
    geom_sf_text( fontface = "bold") + 
    ggtitle("1_BIO_2178782_vs_Risdiplam VennDiagram") +     # https://venn.bio-spring.top/using-ggvenndiagram      #ggVennDiagram(x, label = "count", label_size = 2 )
    theme(plot.title = element_text(hjust = 0.5)) + 
    theme(plot.title = element_text(face = "bold", size = 30) )                                        # ggVennDiagram(x ) + labs(title = "U1_mut1_100 VennDiagram", caption = Sys.Date())
dev.off()



# ========> Compound 2   2186827
dPSI_working = BIO_2186827_risdiplam_columns =  minmaxall[ , grep( "dPSI_.*2186827_.*x_vs_GM_DMSO|dPSI_.*1949634_.*x_vs_GM_DMSO"    , colnames(minmaxall)  ) ] 
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

dim(dPSI_working)
head(dPSI_working)

## ======= ========> venn plot ====##                                  https://finnstats.com/2022/05/09/how-to-create-a-beautiful-venn-diagram-in-r/
x <- list(
    Risdiplam_10x_vs_GM_DMSO    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_1949634_10x_vs_GM_DMSO" , drop = F ] ) ,
    Risdiplam_3x_vs_GM_DMSO     = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_1949634_3x_vs_GM_DMSO"   , drop = F ] ) ,
    BIO_2186827_10x_vs_GM_DMS   = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2186827_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_2186827_10x_vs_GM_DMSO"     , drop = F ] ) ,
    BIO_2186827_3x_vs_GM_DMS    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2186827_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_2186827_3x_vs_GM_DMSO"       , drop = F ] ) ) 
x

fout = paste0("2_BIO_2186827__DMSO_OVERLAP_Risdiplam_DMSO", ".csv")
write.csv(dPSI_working,file = fout,quote = F, row.names = T)

png("2_BIO_2186827_vs_Risdiplam.vnn.png", width = 1500, height = 1100) # png("dPSI_working.vnn.png")
ggVennDiagram(x, label_color = "firebrick" , label_size = 8, set_size = 4, edge_size = 3) + 
    geom_sf_text( fontface = "bold") + 
    ggtitle("2_BIO_2186827_vs_Risdiplam VennDiagram") +     # https://venn.bio-spring.top/using-ggvenndiagram      #ggVennDiagram(x, label = "count", label_size = 2 )
    theme(plot.title = element_text(hjust = 0.5)) + 
    theme(plot.title = element_text(face = "bold", size = 30) )                                        # ggVennDiagram(x ) + labs(title = "U1_mut1_100 VennDiagram", caption = Sys.Date())
dev.off()



# ========> ========> Compound 3          2196772
dPSI_working = BIO_2196772_risdiplam_columns =  minmaxall[ , grep( "dPSI_.*2196772_.*x_vs_GM_DMSO|dPSI_.*1949634_.*x_vs_GM_DMSO"    , colnames(minmaxall)  ) ] 
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

dim(dPSI_working)
head(dPSI_working)
## ========> ======= venn plot ====##                                  https://finnstats.com/2022/05/09/how-to-create-a-beautiful-venn-diagram-in-r/
x <- list(
    Risdiplam_10x_vs_GM_DMSO    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_1949634_10x_vs_GM_DMSO" , drop = F ] ) ,
    Risdiplam_3x_vs_GM_DMSO     = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_1949634_3x_vs_GM_DMSO"   , drop = F ] ) ,
    BIO_2196772_10x_vs_GM_DMS   = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2196772_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_2196772_10x_vs_GM_DMSO"     , drop = F ] ) ,
    BIO_2196772_3x_vs_GM_DMS    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2196772_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_2196772_3x_vs_GM_DMSO"       , drop = F ] ) ) 
x

fout = paste0("3_BIO_2196772__DMSO_OVERLAP_Risdiplam_DMSO", ".csv")
write.csv(dPSI_working,file = fout,quote = F, row.names = T)

png("3_BIO_2196772_vs_Risdiplam.vnn.png", width = 1500, height = 1100) # png("dPSI_working.vnn.png")
ggVennDiagram(x, label_color = "firebrick" , label_size = 8, set_size = 4, edge_size = 3) + 
    geom_sf_text( fontface = "bold") + 
    ggtitle("3_BIO_2196772_vs_Risdiplam VennDiagram") +     # https://venn.bio-spring.top/using-ggvenndiagram      #ggVennDiagram(x, label = "count", label_size = 2 )
    theme(plot.title = element_text(hjust = 0.5)) + 
    theme(plot.title = element_text(face = "bold", size = 30) )                                        # ggVennDiagram(x ) + labs(title = "U1_mut1_100 VennDiagram", caption = Sys.Date())
dev.off()



# ========>========> Compound4          2196895
dPSI_working = BIO_2196895_risdiplam_columns =  minmaxall[ , grep( "dPSI_.*2196895_.*x_vs_GM_DMSO|dPSI_.*1949634_.*x_vs_GM_DMSO"    , colnames(minmaxall)  ) ] 
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

dim(dPSI_working)
head(dPSI_working)
## ========>======= venn plot ====##                                  https://finnstats.com/2022/05/09/how-to-create-a-beautiful-venn-diagram-in-r/
x <- list(
    Risdiplam_10x_vs_GM_DMSO    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_1949634_10x_vs_GM_DMSO" , drop = F ] ) ,
    Risdiplam_3x_vs_GM_DMSO     = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_1949634_3x_vs_GM_DMSO"   , drop = F ] ) ,
    BIO_2196895_10x_vs_GM_DMS   = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2196895_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_2196895_10x_vs_GM_DMSO"     , drop = F ] ) ,
    BIO_2196895_3x_vs_GM_DMS    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2196895_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_2196895_3x_vs_GM_DMSO"       , drop = F ] ) ) 
x

fout = paste0("4_BIO_2196895__DMSO_OVERLAP_Risdiplam_DMSO", ".csv")
write.csv(dPSI_working,file = fout,quote = F, row.names = T)

png("4_BIO_2196895_vs_Risdiplam.vnn.png", width = 1500, height = 1100) # png("dPSI_working.vnn.png")
ggVennDiagram(x, label_color = "firebrick" , label_size = 8, set_size = 4, edge_size = 3) + 
    geom_sf_text( fontface = "bold") + 
    ggtitle("4_BIO_2196895_vs_Risdiplam VennDiagram") +     # https://venn.bio-spring.top/using-ggvenndiagram      #ggVennDiagram(x, label = "count", label_size = 2 )
    theme(plot.title = element_text(hjust = 0.5)) + 
    theme(plot.title = element_text(face = "bold", size = 30) )                                        # ggVennDiagram(x ) + labs(title = "U1_mut1_100 VennDiagram", caption = Sys.Date())
dev.off()


# ========>========> Compound 5          2197306
dPSI_working = BIO_2197306_risdiplam_columns =  minmaxall[ , grep( "dPSI_.*2197306_.*x_vs_GM_DMSO|dPSI_.*1949634_.*x_vs_GM_DMSO"    , colnames(minmaxall)  ) ] 
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

dim(dPSI_working)
head(dPSI_working)
## ========>======= venn plot ====##                                  https://finnstats.com/2022/05/09/how-to-create-a-beautiful-venn-diagram-in-r/
x <- list(
    Risdiplam_10x_vs_GM_DMSO    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_1949634_10x_vs_GM_DMSO" , drop = F ] ) ,
    Risdiplam_3x_vs_GM_DMSO     = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_1949634_3x_vs_GM_DMSO"   , drop = F ] ) ,
    BIO_2197306_10x_vs_GM_DMS   = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2197306_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_2197306_10x_vs_GM_DMSO"     , drop = F ] ) ,
    BIO_2197306_3x_vs_GM_DMS    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2197306_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_2197306_3x_vs_GM_DMSO"       , drop = F ] ) ) 
x

fout = paste0("5_BIO_2197306__DMSO_OVERLAP_Risdiplam_DMSO", ".csv")
write.csv(dPSI_working,file = fout,quote = F, row.names = T)

png("5_BIO_2197306_vs_Risdiplam.vnn.png", width = 1500, height = 1100) # png("dPSI_working.vnn.png")
ggVennDiagram(x, label_color = "firebrick" , label_size = 8, set_size = 4, edge_size = 3) + 
    geom_sf_text( fontface = "bold") + 
    ggtitle("5_BIO_2197306_vs_Risdiplam VennDiagram") +     # https://venn.bio-spring.top/using-ggvenndiagram      #ggVennDiagram(x, label = "count", label_size = 2 )
    theme(plot.title = element_text(hjust = 0.5)) + 
    theme(plot.title = element_text(face = "bold", size = 30) )                                        # ggVennDiagram(x ) + labs(title = "U1_mut1_100 VennDiagram", caption = Sys.Date())
dev.off()



# ========> Compound 6          2199562
dPSI_working = BIO_2199562_risdiplam_columns =  minmaxall[ , grep( "dPSI_.*2199562_.*x_vs_GM_DMSO|dPSI_.*1949634_.*x_vs_GM_DMSO"    , colnames(minmaxall)  ) ] 
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

dim(dPSI_working)
head(dPSI_working)
## ========> ======= venn plot ====##                                  https://finnstats.com/2022/05/09/how-to-create-a-beautiful-venn-diagram-in-r/
x <- list(
    Risdiplam_10x_vs_GM_DMSO    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_1949634_10x_vs_GM_DMSO" , drop = F ] ) ,
    Risdiplam_3x_vs_GM_DMSO     = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_1949634_3x_vs_GM_DMSO"   , drop = F ] ) ,
    BIO_2199562_10x_vs_GM_DMS   = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2199562_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_2199562_10x_vs_GM_DMSO"     , drop = F ] ) ,
    BIO_2199562_3x_vs_GM_DMS    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2199562_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_2199562_3x_vs_GM_DMSO"       , drop = F ] ) ) 
x

fout = paste0("6_BIO_2199562__DMSO_OVERLAP_Risdiplam_DMSO", ".csv")
write.csv(dPSI_working,file = fout,quote = F, row.names = T)

png("6_BIO_2199562_vs_Risdiplam.vnn.png", width = 1500, height = 1100) # png("dPSI_working.vnn.png")
ggVennDiagram(x, label_color = "firebrick" , label_size = 8, set_size = 4, edge_size = 3) + 
    geom_sf_text( fontface = "bold") + 
    ggtitle("6_BIO_2199562_vs_Risdiplam VennDiagram") +     # https://venn.bio-spring.top/using-ggvenndiagram      #ggVennDiagram(x, label = "count", label_size = 2 )
    theme(plot.title = element_text(hjust = 0.5)) + 
    theme(plot.title = element_text(face = "bold", size = 30) )                                        # ggVennDiagram(x ) + labs(title = "U1_mut1_100 VennDiagram", caption = Sys.Date())
dev.off()



#  ========> ========>Compound7          2201042
dPSI_working = BIO_2201042_risdiplam_columns =  minmaxall[ , grep( "dPSI_.*2201042_.*x_vs_GM_DMSO|dPSI_.*1949634_.*x_vs_GM_DMSO"    , colnames(minmaxall)  ) ] 
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

dim(dPSI_working)
head(dPSI_working)
## ======= venn plot ====##                                  https://finnstats.com/2022/05/09/how-to-create-a-beautiful-venn-diagram-in-r/
x <- list(
    Risdiplam_10x_vs_GM_DMSO    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_1949634_10x_vs_GM_DMSO" , drop = F ] ) ,
    Risdiplam_3x_vs_GM_DMSO     = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_1949634_3x_vs_GM_DMSO"   , drop = F ] ) ,
    BIO_2201042_10x_vs_GM_DMS   = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2201042_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_2201042_10x_vs_GM_DMSO"     , drop = F ] ) ,
    BIO_2201042_3x_vs_GM_DMS    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2201042_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_2201042_3x_vs_GM_DMSO"       , drop = F ] ) ) 
x

fout = paste0("7_BIO_2201042__DMSO_OVERLAP_Risdiplam_DMSO", ".csv")
write.csv(dPSI_working,file = fout,quote = F, row.names = T)

png("7_BIO_2201042_vs_Risdiplam.vnn.png", width = 1500, height = 1100) # png("dPSI_working.vnn.png")
ggVennDiagram(x, label_color = "firebrick" , label_size = 8, set_size = 4, edge_size = 3) + 
    geom_sf_text( fontface = "bold") + 
    ggtitle("7_BIO_2201042_vs_Risdiplam VennDiagram") +     # https://venn.bio-spring.top/using-ggvenndiagram      #ggVennDiagram(x, label = "count", label_size = 2 )
    theme(plot.title = element_text(hjust = 0.5)) + 
    theme(plot.title = element_text(face = "bold", size = 30) )                                        # ggVennDiagram(x ) + labs(title = "U1_mut1_100 VennDiagram", caption = Sys.Date())
dev.off()



# ========> Compound 8          2204984
dPSI_working = BIO_2204984_risdiplam_columns =  minmaxall[ , grep( "dPSI_.*2204984_.*x_vs_GM_DMSO|dPSI_.*1949634_.*x_vs_GM_DMSO"    , colnames(minmaxall)  ) ] 
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

dim(dPSI_working)
head(dPSI_working)
## ======= venn plot ====##                                  https://finnstats.com/2022/05/09/how-to-create-a-beautiful-venn-diagram-in-r/
x <- list(
    Risdiplam_10x_vs_GM_DMSO    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_1949634_10x_vs_GM_DMSO" , drop = F ] ) ,
    Risdiplam_3x_vs_GM_DMSO     = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_1949634_3x_vs_GM_DMSO"   , drop = F ] ) ,
    BIO_2204984_10x_vs_GM_DMS   = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2204984_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_2204984_10x_vs_GM_DMSO"     , drop = F ] ) ,
    BIO_2204984_3x_vs_GM_DMS    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2204984_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_2204984_3x_vs_GM_DMSO"       , drop = F ] ) ) 
x

fout = paste0("8_BIO_2204984__DMSO_OVERLAP_Risdiplam_DMSO", ".csv")
write.csv(dPSI_working,file = fout,quote = F, row.names = T)

png("8_BIO_2204984_vs_Risdiplam.vnn.png", width = 1500, height = 1100) # png("dPSI_working.vnn.png")
ggVennDiagram(x, label_color = "firebrick" , label_size = 8, set_size = 4, edge_size = 3) + 
    geom_sf_text( fontface = "bold") + 
    ggtitle("8_BIO_2204984_vs_Risdiplam VennDiagram") +     # https://venn.bio-spring.top/using-ggvenndiagram      #ggVennDiagram(x, label = "count", label_size = 2 )
    theme(plot.title = element_text(hjust = 0.5)) + 
    theme(plot.title = element_text(face = "bold", size = 30) )                                        # ggVennDiagram(x ) + labs(title = "U1_mut1_100 VennDiagram", caption = Sys.Date())
dev.off()



# ========> Compound9          2178782
dPSI_working = BIO_2178782_risdiplam_columns =  minmaxall[ , grep( "dPSI_.*2178782_.*x_vs_GM_DMSO|dPSI_.*1949634_.*x_vs_GM_DMSO"    , colnames(minmaxall)  ) ] 
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

dim(dPSI_working)
head(dPSI_working)
## ======= venn plot ====##                                  https://finnstats.com/2022/05/09/how-to-create-a-beautiful-venn-diagram-in-r/
x <- list(
    Risdiplam_10x_vs_GM_DMSO    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_1949634_10x_vs_GM_DMSO" , drop = F ] ) ,
    Risdiplam_3x_vs_GM_DMSO     = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_1949634_3x_vs_GM_DMSO"   , drop = F ] ) ,
    BIO_2178782_10x_vs_GM_DMS   = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2178782_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_2178782_10x_vs_GM_DMSO"     , drop = F ] ) ,
    BIO_2178782_3x_vs_GM_DMS    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2178782_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_2178782_3x_vs_GM_DMSO"       , drop = F ] ) ) 
x

fout = paste0("9_BIO_2178782__DMSO_OVERLAP_Risdiplam_DMSO", ".csv")
write.csv(dPSI_working,file = fout,quote = F, row.names = T)

png("9_BIO_2178782_vs_Risdiplam.vnn.png", width = 1500, height = 1100) # png("dPSI_working.vnn.png")
ggVennDiagram(x, label_color = "firebrick" , label_size = 8, set_size = 4, edge_size = 3) + 
    geom_sf_text( fontface = "bold") + 
    ggtitle("9_BIO_2178782_vs_Risdiplam VennDiagram") +     # https://venn.bio-spring.top/using-ggvenndiagram      #ggVennDiagram(x, label = "count", label_size = 2 )
    theme(plot.title = element_text(hjust = 0.5)) + 
    theme(plot.title = element_text(face = "bold", size = 30) )                                        # ggVennDiagram(x ) + labs(title = "U1_mut1_100 VennDiagram", caption = Sys.Date())
dev.off()



# ========> Compound10          2207180
dPSI_working = BIO_2207180_risdiplam_columns =  minmaxall[ , grep( "dPSI_.*2207180_.*x_vs_GM_DMSO|dPSI_.*1949634_.*x_vs_GM_DMSO"    , colnames(minmaxall)  ) ] 
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

dim(dPSI_working)
head(dPSI_working)
## ======= venn plot ====##                                  https://finnstats.com/2022/05/09/how-to-create-a-beautiful-venn-diagram-in-r/
x <- list(
    Risdiplam_10x_vs_GM_DMSO    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_1949634_10x_vs_GM_DMSO" , drop = F ] ) ,
    Risdiplam_3x_vs_GM_DMSO     = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_1949634_3x_vs_GM_DMSO"   , drop = F ] ) ,
    BIO_2207180_10x_vs_GM_DMS   = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2207180_10x_vs_GM_DMSO ) ), "dPSI_GM_BIO_2207180_10x_vs_GM_DMSO"     , drop = F ] ) ,
    BIO_2207180_3x_vs_GM_DMS    = row.names( dPSI_working[ which( !is.na(dPSI_working$dPSI_GM_BIO_2207180_3x_vs_GM_DMSO  ) ), "dPSI_GM_BIO_2207180_3x_vs_GM_DMSO"       , drop = F ] ) ) 
x

fout = paste0("10_BIO_2207180__DMSO_OVERLAP_Risdiplam_DMSO", ".csv")
write.csv(dPSI_working,file = fout,quote = F, row.names = T)

png("10_BIO_2207180_vs_Risdiplam.vnn.png", width = 1500, height = 1100) # png("dPSI_working.vnn.png")
ggVennDiagram(x, label_color = "firebrick" , label_size = 8, set_size = 4, edge_size = 3) + 
    geom_sf_text( fontface = "bold") + 
    ggtitle("10_BIO_2207180_vs_Risdiplam VennDiagram") +     # https://venn.bio-spring.top/using-ggvenndiagram      #ggVennDiagram(x, label = "count", label_size = 2 )
    theme(plot.title = element_text(hjust = 0.5)) + 
    theme(plot.title = element_text(face = "bold", size = 30) )                                        # ggVennDiagram(x ) + labs(title = "U1_mut1_100 VennDiagram", caption = Sys.Date())
dev.off()

############################ 10x experiments + 3x compounds experiments ############################ 10x experiments + 3x Risdiplam experiments 



# run.06.DSG_counts_minmaxtable_coorelationlot8
# rm(list = ls()) #install.packages("ggVennDiagram") # 15min# #rm(list = "line") #install.packages("ggVennDiagram") # 15min#
R.Version()
library(ggplot2)
library(dplyr)
library(ggrepel) # https://cran.r-project.org/web/packages/ggrepel/vignettes/ggrepel.html
set.seed(42)

din     = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230921054434_Zhen.Gao_GMfibro_3vs3/DSG_Result/From_DNANenxs_Master_3vs3_09-25/"
#out_dir = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230921054434_Zhen.Gao_GMfibro_3vs3/DSG_Result/splicing_offtargets_3vs3_09-30_abs_dPSI_plotting/10x_dose/dPSI_0.1/" #splicing_offtargets_3vs3_09-29_abs_dPSI/" #_09-28_
out_dir = "/edgehpc/dept/compbio/projects/TST12188/dnanexus/20230921054434_Zhen.Gao_GMfibro_3vs3/DSG_Result/splicing_offtargets_3vs3_09-30_abs_dPSI_plotting/3x_dose/dPSI_0.1/" #splicing_offtargets_3vs3_09-29_abs_dPSI/" #_09-28_

dir.create(out_dir, recursive = T)
setwd(out_dir)

pformat = "/edgehpc/dept/compbio/users/dhuh/software/R/R_modified/pformat_whitebG.r"
jet     = colorRampPalette(c("blue","green","yellow","orange","darkred")) # make gradient of colors #brightjet = colorRampPalette(c("#007FFF", "cyan","#7FFF7F", "yellow", "#FF7F00","#FF3535")) # make gradient of colors

######################
minpdj_maxdPSI_FDR_qual = function(tbtemp, colnn){         ##==09-28-all abs() ZG
    #i
    gn = unique(tbtemp$geneSymbol)

    if( sum(gn  == ".") > 0 ){ gn = gn[ !(gn  == ".") ] }  # remove un-annotated genes
    
    minmaxcum = as.data.frame( matrix(0, nrow = length(gn) , ncol = 4 ) )      #  3 add algorithm =======> ZG 2023-10-05
    colnames(minmaxcum) = colnn 
    minmaxcum$genesymbol = gn
    minmaxcum
    
    for(i in 1:length(gn)){
        #             i
        gntemp = gn[i]    #gntemp = "HTT"     #gntemp = "SMN1"     #gntemp = "SMN2"
        
        tbtemp2 = tbtemp[ which(tbtemp$geneSymbol ==  gntemp) , ]
        
        if(nrow(tbtemp2) ==  1){          
            
            dPSItemp        = abs( tbtemp2$dPSI )
            algorithem_used = tbtemp2$Algorithm             # for majiq, keep PdPSI. =======> ZG 2023-10-05
            
            if(tbtemp2$Algorithm ==  "majiq_v2"){                                                #  from "majiq" 
                padj_PdPSI = 1- tbtemp2$PdPSI                               # for majiq, keep PdPSI. =======> ZG 2023-10-05
            }else{
                padj_PdPSI = tbtemp2$FDR                                     # for rmats and leafcutter keep padj
            }
            
        }else{                                             # if there are more than two rows of goi (gene of interest) 
            
            rn_minpadj = which( tbtemp2$FDR == min( tbtemp2$FDR, na.rm = T) ) 
            tbtemp3 = tbtemp2[ rn_minpadj, ]
            
            if(nrow(tbtemp3) ==  0){                # if there's no min, it's all majiq, with multiple lines
                rn_maxpdpsi = which(tbtemp2$PdPSI  == max(tbtemp2$PdPSI, na.rm = T)  ) # ..get the max(PdPSI)
                tbtemp3 = tbtemp2[rn_maxpdpsi,]
                
                if(nrow(tbtemp3) ==  1){                     # if there's only one max PdPSI
                    dPSItemp =  abs( tbtemp3$dPSI )
                    padj_PdPSI = 1- tbtemp3$PdPSI              # for majiq, keep PdPSI. =======> ZG 2023-10-05
                    algorithem_used = tbtemp3$Algorithm     ####=======>>
                }else{                                     #if there's more than on max dPSI
                    dPSItemp = max( abs( tbtemp3$dPSI) )  # pick the max(dPSI)
                    padj_PdPSI = 1- tbtemp3$PdPSI[1]
                    algorithem_used = tbtemp3$Algorithm[1]  ####=======>>
                }
                
            }else if( nrow(tbtemp3) ==  1){       # if there's only one min (either rmats or leafcutter, no majiq)
                dPSItemp   = abs( tbtemp3$dPSI )
                padj_PdPSI = tbtemp3$FDR
                algorithem_used = tbtemp3$Algorithm     ####=======>>
            }else{                                    # more than 1 min, pick max(dPSI). both are either rmats or leafcutter. 
                dPSItemp = max( abs( tbtemp3$dPSI) )
                padj_PdPSI = tbtemp3$FDR[1]
                algorithem_used = tbtemp3$Algorithm[1]     ####=======>>
            }
        }
        minmaxcum[i, 2] = padj_PdPSI
        minmaxcum[i, 3] = dPSItemp
        minmaxcum[i, 4] = algorithem_used
        
    }
    
    print(minmaxcum[i,])
    return(minmaxcum)
}

coi_ar = dir(din, pattern = "dPSI0.1")    # all compounds, dPSI>0.1 #coi_ar = dir(din)
### the following step must be checked !!
coi_short_names = gsub( "_dPSI0.1_padj0.05_M50_EdPSI0.1_PdPSI0.9.csv" ,  "" , coi_ar )
coi_short_names = gsub( "filteredevents_" ,  "" , coi_short_names )
coi_short_names

thr_dPSI_rm = 0.3; 
thr_dPSI_lc = 0.25; 
thr_dPSI_mj = 0.3;

param = paste0("dPSIrm",thr_dPSI_rm,"_dPSIlc",thr_dPSI_lc,"_padj0.05_EdPSI",thr_dPSI_mj,"_PdPSI0.9_M50") # for fout

### minpadj per gene ####################
minmaxall = c()

for(i in 1:length(coi_ar)){
    #      i = 1
    coi = coi_ar[i] # compound of interest
    
    fin = dir(din , pattern = coi)
    tbtemp = read.table(paste0(din,fin) ,stringsAsFactors = F,sep = ",",header = 1)
    head(tbtemp)
    dim(tbtemp)
    
    rm_t = tbtemp[ which( tbtemp$Algorithm ==  "rmats_turbo" & abs(tbtemp$dPSI)       >=  thr_dPSI_rm) , ] #   rm_t = tbtemp[ which( tbtemp$Algorithm ==  "rmats"      & abs(tbtemp$dPSI)       >=  thr_dPSI_rm) , ] 
    lc_t = tbtemp[ which( tbtemp$Algorithm ==  "leafcutter"  & abs(tbtemp$dPSI)       >=  thr_dPSI_lc) , ]
    mj_t = tbtemp[ which( tbtemp$Algorithm ==  "majiq_v2"    &     tbtemp$Cutoff_dPSI >=  thr_dPSI_mj) , ] #   mj_t = tbtemp[ which( tbtemp$Algorithm ==  "majiq"      &     tbtemp$Cutoff_dPSI >=  thr_dPSI_mj) , ]
    
    head(rm_t)
    head(lc_t)
    head(mj_t) #   tail(mj_t)
    
    tbtemp_t = rbind(rm_t, lc_t, mj_t)
    tbtemp_t = tbtemp_t[!(tbtemp_t$geneSymbol ==  ".") ,] #clean up some names   # head(tbtemp_t)   #  dim(tbtemp_t)   #  goi = "HTT"; #   goi = "ATG16L1";   #  tbtemp_t[which(tbtemp_t$geneSymbol ==  goi) ,]
    
    minmaxtemp = minpdj_maxdPSI_FDR_qual( tbtemp = tbtemp_t, colnn = c("genesymbol",paste0("FDR_equal_",coi_short_names[i]) , paste0("dPSI_",coi_short_names[i]), paste0("Algorithm_",coi_short_names[i]) ) )  ##  == Call the function
    head(minmaxtemp)
    dim(minmaxtemp)
    
    colnames(minmaxtemp) = gsub("filteredevents_","", sapply( strsplit( colnames(minmaxtemp) , paste0("_dPSI") ) , "[[", 1) ) #   gsub("filteredevents_TST11742_","", sapply( strsplit( colnames(minmaxtemp) , paste0("_dPSI") ) , "[[", 1) )
    #colnames(minmaxtemp) = gsub("BIO_","",  colnames(minmaxtemp)  ) 
  
    ## merge ##
    if(i ==  1){ minmaxall = minmaxtemp
    } else{  minmaxall = merge(minmaxall, minmaxtemp, by.x = "genesymbol", by.y = "genesymbol" , all = T) }
}

head(minmaxall) 
dim(minmaxall) # [1] [1] 2331   85 for GM GM09677c SMA fibroblasts  cells  *** 2195   61 for SySy5Y cells                                  [2] 162  60 GM cells [1] 249   84 GM cells 

minmaxall_raw = minmaxall
rownames(minmaxall) = make.names(minmaxall$genesymbol , unique = T)            # should take care     
minmaxall$genesymbol = NULL 

colnames(minmaxall) 
row.names(minmaxall) 
minmaxall[1:10, 1:10] 
minmaxall_raw[1:10, 1:10] 

## ==(1)==  Quality Assurance 1: check if NA used as gene name 
any(row.names(minmaxall) %in% "NA")
any(row.names(minmaxall) %in% "NA.")
any(row.names(minmaxall) %in% "NA..")
minmaxall = minmaxall[ !(row.names(minmaxall) %in% c("NA", "NA.", "NA..")), ]

## =(2)==  Quality Assurance 2: check infinite in each column 
for(i in 1:ncol(minmaxall) ){
    my_vec = minmaxall[, i]
    print(i)
    #print(minmaxall[, i])
    print(any( is.infinite(my_vec) ) )  #   any( is.infinite(my_vec))           68
}
# i     # ==126
# i=1

dim(minmaxall) #  378 3vs3 126 GM cells    328 126 GM cells
head(minmaxall) 
colnames(minmaxall) 
minmaxall[1:20, 1:6] 


minpdj_maxdPSI_FDR_qual_table_fill = function(  minmaxall_passed  , tbtemp , colnn   ){         ##==09-28-all abs() ZG  #minmaxall_updated = minmaxall_passed
    
    for(line in 1:nrow( minmaxall_passed )){                                    #

        print(line)
        gntemp = row.names(minmaxall_passed)[line]                              #         minmaxall_passed[i,]         #gntemp = "HTT"         #gntemp = "SMN1"         #gntemp = "SMN2"

        if(  ! gntemp %in% tbtemp$geneSymbol   ) {
            #pass 
        } else if(  ! is.na( minmaxall_passed[ line,  colnn[3] ] )  ) { 
            #pass
        } else if(  is.na( minmaxall_passed[ line,  colnn[3] ] )  ){    

            tbtemp2 = tbtemp[ which(tbtemp$geneSymbol ==  gntemp) , ]
            
            if( nrow(tbtemp2) ==  1 ){                         
                
                dPSItemp        = abs( tbtemp2$dPSI )
                algorithem_used = tbtemp2$Algorithm             
                
                if(tbtemp2$Algorithm ==  "majiq_v2"){                                                #  from "majiq" 
                    padj_PdPSI = 1- tbtemp2$PdPSI                               # for majiq 
                }else{
                    padj_PdPSI = tbtemp2$FDR                                    # for rmats and leafcutter keep padj
                }
                
            }else{                                                              # if there are more than two rows of goi (gene of interest) , find either "min" padj or max PdPSI 
                
                rn_minpadj = which( tbtemp2$FDR == min( tbtemp2$FDR, na.rm = T) ) 
                tbtemp3 = tbtemp2[ rn_minpadj, ]
                
                if( nrow(tbtemp3) ==  0){                # if there's no min, it's all majiq, with multiple lines
                    rn_maxpdpsi = which(tbtemp2$PdPSI  == max(tbtemp2$PdPSI, na.rm = T)  ) # ..get the max(PdPSI)
                    tbtemp3 = tbtemp2[rn_maxpdpsi,]
                    
                    if( nrow(tbtemp3) ==  1){       # if there's only one max PdPSI
                        dPSItemp =  abs( tbtemp3$dPSI )
                        padj_PdPSI = 1- tbtemp3$PdPSI                           # for majiq, keep PdPSI. =======> ZG 2023-10-05
                        algorithem_used = tbtemp3$Algorithm     ####=======>>
                    }else{                         #if there's more than on max dPSI
                        dPSItemp = max( abs( tbtemp3$dPSI) )  # pick the max(dPSI)
                        padj_PdPSI = 1- tbtemp3$PdPSI[1]
                        algorithem_used = tbtemp3$Algorithm[1]  ####=======>>
                    }
                    
                }else if( nrow(tbtemp3) ==  1){       # if there's only one min (either rmats or leafcutter, no majiq)
                    dPSItemp   = abs( tbtemp3$dPSI )
                    padj_PdPSI = tbtemp3$FDR
                    algorithem_used = tbtemp3$Algorithm     ####=======>>
                }else{                          # more than 1 min, pick max(dPSI). both are either rmats or leafcutter. 
                    dPSItemp = max( abs( tbtemp3$dPSI) )
                    padj_PdPSI = tbtemp3$FDR[1]
                    algorithem_used = tbtemp3$Algorithm[1]     ####=======>>
                }
                
            }
            
        minmaxall_updated[ line,  ] 
        minmaxall_updated[ line, colnn[2] ] = padj_PdPSI
        minmaxall_updated[ line, colnn[3] ] = dPSItemp
        minmaxall_updated[ line, colnn[4] ] = algorithem_used
        }
    }
    return(minmaxall_updated) #NO return value, just update the data minmaxall_updated
}

###### replace all NA with the raw-data of each samples  +++++++++= Dann's Idea 
FDR_equal_thresh = 0.05; 

for(i in 1:length(coi_ar)){
    #                i = 1 ;  i= i+1
    coi = coi_ar[i] # compound of interest
    fin = dir(din , pattern = coi)
    tbtemp = read.table(paste0(din,fin) ,stringsAsFactors = F,sep = ",",header = 1) 
    head(tbtemp)
    dim(tbtemp)                             # [1] 600  18
    
    rm_a = tbtemp[ which( tbtemp$Algorithm ==  "rmats_turbo" & tbtemp$FDR       <=  FDR_equal_thresh) , ] #  
    lc_a = tbtemp[ which( tbtemp$Algorithm ==  "leafcutter"  & tbtemp$FDR       <=  FDR_equal_thresh) , ]
    mj_a = tbtemp[ which( tbtemp$Algorithm ==  "majiq_v2"    & (1-tbtemp$PdPSI) <=  FDR_equal_thresh) , ] #  
    
    head(rm_a)
    head(lc_a)
    head(mj_a) #   tail(mj_a)
    
    tbtemp_a = rbind(rm_a, lc_a, mj_a) #         tbtemp_a = tbtemp_a[!(tbtemp_a$geneSymbol ==  ".") ,] #clean up some names
    
    
    if(i ==  1){ 
        minmaxall_updated = minmaxall
    } else{  
        minmaxall_updated =  minmaxtemp_filled
    }
    
    minmaxtemp_filled =  minpdj_maxdPSI_FDR_qual_table_fill( minmaxall_passed =   minmaxall_updated , tbtemp = tbtemp_a , colnn = c("genesymbol",paste0("FDR_equal_",coi_short_names[i]) , paste0("dPSI_",coi_short_names[i]), paste0("Algorithm_",coi_short_names[i] ) ) )  ##  == Call the function
}

minmaxall[1:50, 1:6]
minmaxtemp_filled[1:50, 1:6]
minmaxtemp_filled[1:6,]
minmaxtemp_filled[1:50, grep( "dPSI" , colnames(minmaxtemp_filled))]
minmaxtemp_filled[1:50, grep( "2178782" , colnames(minmaxtemp_filled))]
minmaxtemp_filled[1:50, grep( "2197306" , colnames(minmaxtemp_filled))]
#getwd()

minmaxall = minmaxtemp_filled

head(minmaxall) 
dim(minmaxall) # [1] [1] 2331   85 for GM GM09677c SMA fibroblasts  cells  *** 2195   61 for SySy5Y cells                                  [2] 162  60 GM cells [1] 249   84 GM cells 

getwd()

fout = paste0("summarytable_with_gene_dPSI_0.1", "_GMfibro_3vs3" ,".csv")
write.csv(minmaxall,file = fout,quote = F, row.names = T)

sample_types =  unique( sapply(strsplit( colnames(minmaxall),  split="_\\d{1,2}x_vs_") , `[`, 1) )  #numDSG_DMSO$cellline_dose = sapply(strsplit(numDSG_DMSO$cellline_DMSO, "_vs_") , `[`, 1) 
sample_types

head( minmaxall[ ,  grepl( "vs_.._DMSO"    , colnames(minmaxall)  ) ]  )# grepl NOT grep  #minmaxall_Ris  = minmaxall[ ,  grepl( "vs_.._1949634" , colnames(minmaxall)  ) ]  # grepl NOT grep

######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x
######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x ######## 10x

Compounds_10x_vs_GM_DMSO = minmaxall[ ,  grepl( "_10x_vs_GM_DMSO"    , colnames(minmaxall)  ) ]  # grepl NOT grep  #minmaxall_Ris  = minmaxall[ ,  grepl( "vs_.._1949634" , colnames(minmaxall)  ) ]  # grepl NOT grep
dim(Compounds_10x_vs_GM_DMSO)
head(Compounds_10x_vs_GM_DMSO)
Compounds_10x_vs_GM_DMSO[1:2, ]

# Compound1          2178782 =============>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
dPSI_working = BIO_2178782_risdiplam_columns =  Compounds_10x_vs_GM_DMSO[ , grep( "2178782_..x_vs_|1949634_..x_vs_"    , colnames(Compounds_10x_vs_GM_DMSO)  ) ] # head(BIO_2178782_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2178782_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2178782_10x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound1_BIO_2178782_10x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2178782_10x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_10x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2178782_10x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_10x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 10x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()


# Compound2       2186827
dPSI_working = BIO_2186827_risdiplam_columns =  Compounds_10x_vs_GM_DMSO[ , grep( "2186827_..x_vs_|1949634_..x_vs_"    , colnames(Compounds_10x_vs_GM_DMSO)  ) ] # head(BIO_2186827_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2186827_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2186827_10x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound2_BIO_2186827_10x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2186827_10x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_10x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2186827_10x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_10x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 10x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()

# Compound3        2196772
dPSI_working = BIO_2196772_risdiplam_columns =  Compounds_10x_vs_GM_DMSO[ , grep( "2196772_..x_vs_|1949634_..x_vs_"    , colnames(Compounds_10x_vs_GM_DMSO)  ) ] # head(BIO_2196772_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2196772_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2196772_10x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound3_BIO_2196772_10x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2196772_10x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_10x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2196772_10x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_10x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 10x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()

# Compound4 2196895
dPSI_working = BIO_2196895_risdiplam_columns =  Compounds_10x_vs_GM_DMSO[ , grep( "2196895_..x_vs_|1949634_..x_vs_"    , colnames(Compounds_10x_vs_GM_DMSO)  ) ] 
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2196895_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2196895_10x_vs_GM_DMSO)] <- 0

dPSI_working

# TPTEP2                                 1.199514e-02                          0.7925311                              leafcutter                            7.200000e-03                          0.4197000                                majiq_v2 ?????

###### change x -limit
getwd()
fout = "Compound4_BIO_2196895_10x_VS_Risdiplam_in_DMSO_full.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2196895_10x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_10x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2196895_10x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_10x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 10x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold") 
    ) + scale_x_continuous(limits = c(0, 0.8))     #+ scale_y_continuous(limits = c(0, 1))
dev.off()

# Compound5 2197306
dPSI_working = BIO_2197306_risdiplam_columns =  Compounds_10x_vs_GM_DMSO[ , grep( "2197306_..x_vs_|1949634_..x_vs_"    , colnames(Compounds_10x_vs_GM_DMSO)  ) ] # head(BIO_2197306_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2197306_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2197306_10x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound5_BIO_2197306_10x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2197306_10x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_10x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2197306_10x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_10x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 10x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()

# Compound6 2199562
dPSI_working = BIO_2199562_risdiplam_columns =  Compounds_10x_vs_GM_DMSO[ , grep( "2199562_..x_vs_|1949634_..x_vs_"    , colnames(Compounds_10x_vs_GM_DMSO)  ) ] # head(BIO_2199562_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2199562_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2199562_10x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound6_BIO_2199562_10x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2199562_10x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_10x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2199562_10x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_10x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 10x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()

# Compound7 2201042
dPSI_working = BIO_2201042_risdiplam_columns =  Compounds_10x_vs_GM_DMSO[ , grep( "2201042_..x_vs_|1949634_..x_vs_"    , colnames(Compounds_10x_vs_GM_DMSO)  ) ] # head(BIO_2201042_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2201042_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2201042_10x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound7_BIO_2201042_10x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2201042_10x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_10x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2201042_10x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_10x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 10x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()

# Compound8    2204984
dPSI_working = BIO_2204984_risdiplam_columns =  Compounds_10x_vs_GM_DMSO[ , grep( "2204984_..x_vs_|1949634_..x_vs_"    , colnames(Compounds_10x_vs_GM_DMSO)  ) ] # head(BIO_2204984_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2204984_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2204984_10x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound8_BIO_2204984_10x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2204984_10x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_10x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2204984_10x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_10x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 10x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()

# Compound9  2206678
dPSI_working = BIO_2206678_risdiplam_columns =  Compounds_10x_vs_GM_DMSO[ , grep( "2206678_..x_vs_|1949634_..x_vs_"    , colnames(Compounds_10x_vs_GM_DMSO)  ) ] # head(BIO_2206678_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2206678_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2206678_10x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound9_BIO_2206678_10x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2206678_10x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_10x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2206678_10x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_10x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 10x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()

# Compound10 2207180
dPSI_working = BIO_2207180_risdiplam_columns =  Compounds_10x_vs_GM_DMSO[ , grep( "2207180_..x_vs_|1949634_..x_vs_"    , colnames(Compounds_10x_vs_GM_DMSO)  ) ] # head(BIO_2207180_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_10x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2207180_10x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2207180_10x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound10_BIO_2207180_10x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2207180_10x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_10x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2207180_10x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_10x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 10x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()


######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x
######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x ######## 3x

Compounds_3x_vs_GM_DMSO = minmaxall[ ,  grepl( "_3x_vs_GM_DMSO"    , colnames(minmaxall)  ) ]  # grepl NOT grep  #minmaxall_Ris  = minmaxall[ ,  grepl( "vs_.._1949634" , colnames(minmaxall)  ) ]  # grepl NOT grep
dim(Compounds_3x_vs_GM_DMSO)
head(Compounds_3x_vs_GM_DMSO)
Compounds_3x_vs_GM_DMSO[1:2, ]

# Compound1          2178782 =============>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>.
dPSI_working = BIO_2178782_risdiplam_columns =  Compounds_3x_vs_GM_DMSO[ , grep( "2178782_.x_vs_|1949634_.x_vs_"    , colnames(Compounds_3x_vs_GM_DMSO)  ) ] # head(BIO_2178782_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2178782_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2178782_3x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound1_BIO_2178782_3x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2178782_3x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_3x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2178782_3x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_3x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 3x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()


# Compound2       2186827
dPSI_working = BIO_2186827_risdiplam_columns =  Compounds_3x_vs_GM_DMSO[ , grep( "2186827_.x_vs_|1949634_.x_vs_"    , colnames(Compounds_3x_vs_GM_DMSO)  ) ] # head(BIO_2186827_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2186827_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2186827_3x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound2_BIO_2186827_3x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2186827_3x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_3x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2186827_3x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_3x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 3x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()

# Compound3        2196772
dPSI_working = BIO_2196772_risdiplam_columns =  Compounds_3x_vs_GM_DMSO[ , grep( "2196772_.x_vs_|1949634_.x_vs_"    , colnames(Compounds_3x_vs_GM_DMSO)  ) ] # head(BIO_2196772_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2196772_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2196772_3x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound3_BIO_2196772_3x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2196772_3x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_3x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2196772_3x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_3x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 3x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()

# Compound4 2196895
dPSI_working = BIO_2196895_risdiplam_columns =  Compounds_3x_vs_GM_DMSO[ , grep( "2196895_.x_vs_|1949634_.x_vs_"    , colnames(Compounds_3x_vs_GM_DMSO)  ) ] 
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2196895_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2196895_3x_vs_GM_DMSO)] <- 0

dPSI_working

# TPTEP2                                 1.199514e-02                          0.7925311                              leafcutter                            7.200000e-03                          0.4197000                                majiq_v2 ?????

###### change x -limit
getwd()
fout = "Compound4_BIO_2196895_3x_VS_Risdiplam_in_DMSO_full.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2196895_3x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_3x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2196895_3x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_3x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 3x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold") 
    ) + scale_x_continuous(limits = c(0, 0.8))     #+ scale_y_continuous(limits = c(0, 1))
dev.off()

# Compound5 2197306
dPSI_working = BIO_2197306_risdiplam_columns =  Compounds_3x_vs_GM_DMSO[ , grep( "2197306_.x_vs_|1949634_.x_vs_"    , colnames(Compounds_3x_vs_GM_DMSO)  ) ] # head(BIO_2197306_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2197306_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2197306_3x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound5_BIO_2197306_3x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2197306_3x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_3x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2197306_3x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_3x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 3x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()

# Compound6 2199562
dPSI_working = BIO_2199562_risdiplam_columns =  Compounds_3x_vs_GM_DMSO[ , grep( "2199562_.x_vs_|1949634_.x_vs_"    , colnames(Compounds_3x_vs_GM_DMSO)  ) ] # head(BIO_2199562_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2199562_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2199562_3x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound6_BIO_2199562_3x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2199562_3x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_3x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2199562_3x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_3x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 3x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()

# Compound7 2201042
dPSI_working = BIO_2201042_risdiplam_columns =  Compounds_3x_vs_GM_DMSO[ , grep( "2201042_.x_vs_|1949634_.x_vs_"    , colnames(Compounds_3x_vs_GM_DMSO)  ) ] # head(BIO_2201042_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2201042_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2201042_3x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound7_BIO_2201042_3x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2201042_3x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_3x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2201042_3x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_3x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 3x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()

# Compound8    2204984
dPSI_working = BIO_2204984_risdiplam_columns =  Compounds_3x_vs_GM_DMSO[ , grep( "2204984_.x_vs_|1949634_.x_vs_"    , colnames(Compounds_3x_vs_GM_DMSO)  ) ] # head(BIO_2204984_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2204984_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2204984_3x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound8_BIO_2204984_3x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2204984_3x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_3x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2204984_3x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_3x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 3x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()

# Compound9  2206678
dPSI_working = BIO_2206678_risdiplam_columns =  Compounds_3x_vs_GM_DMSO[ , grep( "2206678_.x_vs_|1949634_.x_vs_"    , colnames(Compounds_3x_vs_GM_DMSO)  ) ] # head(BIO_2206678_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2206678_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2206678_3x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound9_BIO_2206678_3x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2206678_3x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_3x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2206678_3x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_3x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 3x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()

# Compound10 2207180
dPSI_working = BIO_2207180_risdiplam_columns =  Compounds_3x_vs_GM_DMSO[ , grep( "2207180_.x_vs_|1949634_.x_vs_"    , colnames(Compounds_3x_vs_GM_DMSO)  ) ] # head(BIO_2207180_risdiplam_columns)
dPSI_working = dPSI_working[ (rowSums(is.na(dPSI_working) ) != ncol(dPSI_working)), ] #U1_WT_EtOH_vs_DMSO_EtOH_dPSI # m[rowSums(is.na(m)) != ncol(m), ] # https://stackoverflow.com/questions/6471689/remove-rows-in-r-matrix-where-all-data-is-na

head(dPSI_working, 2)
dPSI_working[1:2,]

dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_1949634_3x_vs_GM_DMSO)] <- 0
dPSI_working$dPSI_GM_BIO_2207180_3x_vs_GM_DMSO[is.na(dPSI_working$dPSI_GM_BIO_2207180_3x_vs_GM_DMSO)] <- 0

getwd()
fout = "Compound10_BIO_2207180_3x_VS_Risdiplam_in_DMSO.png"
png(fout, height = 1200, width = 1200)            #png(fout,height = 500, width = length(y)*50)
ggplot(dPSI_working, aes( x = dPSI_GM_BIO_2207180_3x_vs_GM_DMSO, y= dPSI_GM_BIO_1949634_3x_vs_GM_DMSO,  shape = Algorithm_GM_BIO_2207180_3x_vs_GM_DMSO, color = Algorithm_GM_BIO_1949634_3x_vs_GM_DMSO ) )  +
    geom_point(size=5) + 
    geom_text_repel(label=rownames(dPSI_working)) + 
    labs(title="dPSI : internal compounds VS Risdiplam",
         y ="Risdiplam 3x dPSI vs DMSO") + 
    theme(
        plot.title = element_text(color="red", size=14, face="bold.italic", hjust = 0.5),
        axis.title.x = element_text(color="blue", size=14, face="bold"),
        axis.title.y = element_text(color="#993333", size=14, face="bold")
    )
dev.off()


##############################
#####  plots : separate file as well #################
##############################
## total number of DSG ###

# 1.1) GM 3x3 ===> allsamples 
# y = colSums(dPSI_bi)
# names(y) = gsub( "_3x" , "_03x", names(y) )  # y %>% select(sub('_ln$', '', filter_vector))
# y = y[order(names(y), decreasing=T)]
# fout=paste0("3vs3_abs_dPSI_binary_numDSG_vertica.png")
# colorr=c( rep(rgb(0.7,0.7,0.7),4), rep(rgb(0.3,0.3,0.3),4) )    #"violet" , "grey"  ) # blue, navy, grey "indianred" , "violet"   "cyan" , "violet"


# # 1.2) samples vs DMSO
# y = colSums(dPSI_bi)
# names(y) = gsub( "_3x" , "_03x", names(y) )  # y %>% select(sub('_ln$', '', filter_vector))
# y = y[order(names(y), decreasing=T)]
# y = y[ grepl( "vs_.._DMSO" , names(y) ) ] # y %>% select(sub('_ln$', '', filter_vector)) # y = y[ grepl( "vs_SH_DMSO" , names(y) ) ] # y %>% select(sub('_ln$', '', filter_vector))
# fout="3vs3_abs_dPSI_binary_numDSG_vertica_DMSO.png" #paste0("binary_numDSG_",param,"vertical_DMSO.png")
# colorr=c( "cyan" , "grey"  ) # blue, navy, grey "indianred" , "violet"   "cyan" , "violet"  colorr=c( rep(rgb(0.7,0.7,0.7),2),rep(rgb(0.3,0.3,0.3),2)   )

# # 1.3) samples vs Risdiplam(e.g 1949634)
# y = colSums(dPSI_bi)
# names(y) = gsub( "_3x" , "_03x", names(y) )  # y %>% select(sub('_ln$', '', filter_vector))
# y = y[order(names(y), decreasing=T)]
# y = y[ grepl( "vs_.._BIO_1949634" , names(y) ) ] # y %>% select(sub('_ln$', '', filter_vector))
# fout="3vs3_abs_dPSI_binary_numDSG_vertica_Risdiplam.png"  #paste0("binary_numDSG_",param,"vertical_Risdiplam.png")
# colorr=c( "violet" , "grey"  ) # blue, navy, grey "indianred" , "violet"   "cyan" , "violet"


## 2.1) SH 3x3 ===> all samples
# y = colSums(dPSI_bi)
# names(y) = gsub( "_3x" , "_03x", names(y) )  # y %>% select(sub('_ln$', '', filter_vector))
# y = y[order(names(y), decreasing=T)]
# fout=paste0("3vs3_abs_dPSI_binary_numDSG_vertica.png")
# colorr=c( rep(rgb(0.7,0.7,0.7),4), rep(rgb(0.3,0.3,0.3),4) )    #"violet" , "grey"  ) # blue, navy, grey "indianred" , "violet"   "cyan" , "violet"
# 
## 2.2) samples vs DMSO
# y = colSums(dPSI_bi)
# names(y) = gsub( "_3x" , "_03x", names(y) )  # y %>% select(sub('_ln$', '', filter_vector))
# y = y[order(names(y), decreasing=T)]
# y = y[ grepl( "vs_.._DMSO" , names(y) ) ] # y %>% select(sub('_ln$', '', filter_vector)) # y = y[ grepl( "vs_SH_DMSO" , names(y) ) ] # y %>% select(sub('_ln$', '', filter_vector))
# fout="3vs3_abs_dPSI_binary_numDSG_vertica_DMSO.png" #paste0("binary_numDSG_",param,"vertical_DMSO.png")
# colorr=c( "cyan" , "grey"  ) # blue, navy, grey "indianred" , "violet"   "cyan" , "violet"  colorr=c( rep(rgb(0.7,0.7,0.7),2),rep(rgb(0.3,0.3,0.3),2)   )
# 
# # # 2.3) samples vs Risdiplam(e.g 1949634)
# y = colSums(dPSI_bi)
# names(y) = gsub( "_3x" , "_03x", names(y) )  # y %>% select(sub('_ln$', '', filter_vector))
# y = y[order(names(y), decreasing=T)]
# y = y[ grepl( "vs_.._BIO_1949634" , names(y) ) ] # y %>% select(sub('_ln$', '', filter_vector))
# fout="3vs3_abs_dPSI_binary_numDSG_vertica_Risdiplam.png"  #paste0("binary_numDSG_",param,"vertical_Risdiplam.png")
# colorr=c( "violet" , "grey"  ) # blue, navy, grey "indianred" , "violet"   "cyan" , "violet"

# 3.1) GM 4vs4 ===> allsamples 
# y = colSums(dPSI_bi)
# names(y) = gsub( "_3x" , "_03x", names(y) )  # y %>% select(sub('_ln$', '', filter_vector))
# y = y[order(names(y), decreasing=T)]
# fout=paste0("4vs4_abs_dPSI_binary_numDSG_vertica.png")
# colorr=c( rep(rgb(0.7,0.7,0.7),4), rep(rgb(0.3,0.3,0.3),4) )    #"violet" , "grey"  ) # blue, navy, grey "indianred" , "violet"   "cyan" , "violet"
# 
# # # 3.2) samples vs DMSO
# y = colSums(dPSI_bi)
# names(y) = gsub( "_3x" , "_03x", names(y) )  # y %>% select(sub('_ln$', '', filter_vector))
# y = y[order(names(y), decreasing=T)]
# y = y[ grepl( "vs_.._DMSO" , names(y) ) ] # y %>% select(sub('_ln$', '', filter_vector)) # y = y[ grepl( "vs_SH_DMSO" , names(y) ) ] # y %>% select(sub('_ln$', '', filter_vector))
# fout="4vs4_abs_dPSI_binary_numDSG_vertica_DMSO.png" #paste0("binary_numDSG_",param,"vertical_DMSO.png")
# colorr=c( "cyan" , "grey"  ) # blue, navy, grey "indianred" , "violet"   "cyan" , "violet"  colorr=c( rep(rgb(0.7,0.7,0.7),2),rep(rgb(0.3,0.3,0.3),2)   )
# 
# # # 3.3) samples vs Risdiplam(e.g 1949634)
# y = colSums(dPSI_bi)
# names(y) = gsub( "_3x" , "_03x", names(y) )  # y %>% select(sub('_ln$', '', filter_vector))
# y = y[order(names(y), decreasing=T)]
# y = y[ grepl( "vs_.._BIO_1949634" , names(y) ) ] # y %>% select(sub('_ln$', '', filter_vector))
# fout="4vs4_abs_dPSI_binary_numDSG_vertica_Risdiplam.png"  #paste0("binary_numDSG_",param,"vertical_Risdiplam.png")
# colorr=c( "violet" , "grey"  ) # blue, navy, grey "indianred" , "violet"   "cyan" , "violet"


## 4.1) SH 4vs4 ===> all samples
y = colSums(dPSI_bi)
names(y) = gsub( "_3x" , "_03x", names(y) )  # y %>% select(sub('_ln$', '', filter_vector))
y = y[order(names(y), decreasing=T)]
fout=paste0("4vs4_abs_dPSI_binary_numDSG_vertica.png")
colorr=c( rep(rgb(0.7,0.7,0.7),4), rep(rgb(0.3,0.3,0.3),4) )    #"violet" , "grey"  ) # blue, navy, grey "indianred" , "violet"   "cyan" , "violet"

## 4.2) samples vs DMSO
y = colSums(dPSI_bi)
names(y) = gsub( "_3x" , "_03x", names(y) )  # y %>% select(sub('_ln$', '', filter_vector))
y = y[order(names(y), decreasing=T)]
y = y[ grepl( "vs_.._DMSO" , names(y) ) ] # y %>% select(sub('_ln$', '', filter_vector)) # y = y[ grepl( "vs_SH_DMSO" , names(y) ) ] # y %>% select(sub('_ln$', '', filter_vector))
fout="4vs4_abs_dPSI_binary_numDSG_vertica_DMSO.png" #paste0("binary_numDSG_",param,"vertical_DMSO.png")
colorr=c( "cyan" , "grey"  ) # blue, navy, grey "indianred" , "violet"   "cyan" , "violet"  colorr=c( rep(rgb(0.7,0.7,0.7),2),rep(rgb(0.3,0.3,0.3),2)   )

## 4.3) samples vs Risdiplam(e.g 1949634)
y = colSums(dPSI_bi)
names(y) = gsub( "_3x" , "_03x", names(y) )  # y %>% select(sub('_ln$', '', filter_vector))
y = y[order(names(y), decreasing=T)]
y = y[ grepl( "vs_.._BIO_1949634" , names(y) ) ] # y %>% select(sub('_ln$', '', filter_vector))
fout="4vs4_abs_dPSI_binary_numDSG_vertica_Risdiplam.png"  #paste0("binary_numDSG_",param,"vertical_Risdiplam.png")
colorr=c( "violet" , "grey"  ) # blue, navy, grey "indianred" , "violet"   "cyan" , "violet"


y; getwd()
#### plotting
png(fout,width=800, height=length(y)*35) # png(fout,width=800, height=length(y)*25)
source(pformat)
par(mar=c(10,28,1,1))
bp=barplot(y,  xlim = c(0, max(y)*1.2 ), border=NA,  names.arg=gsub("dPSI_","", names(y) ), # "dPSI_"
           las=2,  cex.axis=0.8,  cex.names=1.0, #cex.axis	 #           expansion factor for numeric axis labels.            las=2,  cex.axis=1.2,  cex.names=1.5 font size
           horiz=T, col=colorr,
           sub = "number(DSG)", font.sub = 4,  cex.sub = 2.0)  #http://howtoinr.weebly.com/customize-labels1.html col.sub = "Red",
text(y, bp, labels = y, pos=4, cex=1.2, offset = 0.3) # lable the differenrtial gene count on the top of BAR
dev.off()





